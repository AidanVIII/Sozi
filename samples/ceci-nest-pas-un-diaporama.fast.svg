<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xmlns:ns1="http://sozi.baierouge.fr"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="1062.9921"
   height="1062.9921"
   id="svg2"
   version="1.1"
   inkscape:version="0.48.3.1 r9886"
   sodipodi:docname="ceci-nest-pas-un-diaporama.fast.svg">
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.49497475"
     inkscape:cx="726.53749"
     inkscape:cy="431.13584"
     inkscape:document-units="px"
     inkscape:current-layer="layer1"
     showgrid="true"
     inkscape:window-width="1280"
     inkscape:window-height="964"
     inkscape:window-x="0"
     inkscape:window-y="26"
     inkscape:window-maximized="1"
     units="cm">
    <inkscape:grid
       id="grid3763"
       type="xygrid"
       empspacing="5"
       visible="true"
       enabled="true"
       snapvisiblegridlinesonly="true" />
  </sodipodi:namedview>
  <defs
     id="defs4">
    <inkscape:path-effect
       tgtlength_rdm="0.3;1"
       tgtlength="100"
       tgtscale="10"
       tgt_places_rdmness="1;1"
       nbtangents="5"
       tremble_frequency="1"
       tremble_size="5;1"
       parallel_offset="5;1"
       ends_tolerance="0.1;1"
       strokeoverlap_rdm="0.3;1"
       strokeoverlap="0.3"
       strokelength_rdm="0.3;1"
       strokelength="100"
       nbiter_approxstrokes="5"
       is_visible="true"
       id="path-effect3765"
       effect="sketch" />
    <inkscape:path-effect
       bendpath4="m 167.14286,514.73163 0,367.83084"
       bendpath3="m 167.14286,882.56247 157.07266,0"
       bendpath2="m 324.21552,514.73163 0,367.83084"
       bendpath1="m 167.14286,514.73163 157.07266,0"
       xx="true"
       yy="true"
       is_visible="true"
       id="path-effect3767"
       effect="envelope" />
    <inkscape:path-effect
       phi="5"
       teeth="10"
       is_visible="true"
       id="path-effect3769"
       effect="gears" />
    <inkscape:path-effect
       crossing_points_vector=""
       switcher_size="15"
       add_other_stroke_width="true"
       add_stroke_width="true"
       prop_to_stroke_width="true"
       interruption_width="3"
       is_visible="true"
       id="path-effect3771"
       effect="knot" />
    <inkscape:path-effect
       nr_y="5"
       nr_x="5"
       is_visible="true"
       id="path-effect3773"
       effect="construct_grid" />
    <inkscape:path-effect
       is_visible="true"
       id="path-effect3775"
       effect="spiro" />
    <inkscape:path-effect
       maxComplexity="1000"
       drawall="true"
       nbgenerations="1"
       similar_only="false"
       generator="m 167.14286,882.56247 52.35755,0 m 52.35756,0 52.35755,0"
       ref_path="m 167.14286,698.64705 157.07266,0"
       is_visible="true"
       id="path-effect3777"
       effect="vonkoch" />
    <inkscape:path-effect
       vertical="false"
       scale_y_rel="false"
       prop_scale="1"
       bendpath="m 167.14286,698.64705 157.07266,0"
       is_visible="true"
       id="path-effect3779"
       effect="bend_path" />
  </defs>
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     id="layer1"
     inkscape:groupmode="layer"
     inkscape:label="Calque 1"
     transform="translate(0,10.631225)">
    <g
       style="font-size:33.79266739px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Iwona;-inkscape-font-specification:Iwona"
       id="text2985">
      <path
         d="m 283.09232,529.79484 c 0.65361,-1.28015 0.95042,-2.64906 0.89044,-4.10672 -0.0326,-1.45084 -0.42002,-2.79323 -1.16231,-4.02715 -1.14442,-1.9023 -2.72161,-2.85571 -4.73156,-2.86023 -2.00998,-0.005 -4.23175,0.72523 -6.66531,2.18924 -2.43359,1.464 -4.11924,3.08491 -5.05698,4.86273 -0.93774,1.77782 -0.83441,3.61788 0.30999,5.52019 1.23718,2.05653 2.94197,3.61003 5.11438,4.66051 l -1.18251,0.71139 c -2.17241,-1.05049 -3.8772,-2.60399 -5.11438,-4.66052 -1.53618,-2.55355 -1.88722,-5.03815 -1.05312,-7.45382 0.85123,-2.42599 2.67358,-4.47923 5.46706,-6.15975 2.79346,-1.68051 5.45265,-2.3233 7.97759,-1.92837 2.54204,0.38463 4.58115,1.85371 6.11735,4.40725 0.73198,1.21678 1.13997,2.53513 1.22397,3.95504 0.0839,1.41991 -0.16487,2.77161 -0.74644,4.0551 l -1.38817,0.83511"
         style="font-size:30px"
         id="path7258" />
      <path
         d="m 282.07767,546.52379 -4.63127,-7.68195 c -3.06593,1.84838 -4.05161,3.68035 -2.95703,5.49593 0.78478,1.30173 1.85873,2.28901 3.22186,2.96184 l -1.07907,0.65055 c -1.43164,-0.63153 -2.53985,-1.59816 -3.32463,-2.89988 -0.9087,-1.50728 -1.0886,-3.04524 -0.53968,-4.6139 0.56604,-1.57899 1.75684,-2.91576 3.57242,-4.01034 1.81557,-1.09456 3.5451,-1.51839 5.18859,-1.27148 1.6606,0.2366 2.94525,1.10853 3.85396,2.61579 0.89836,1.49015 1.06453,3.02471 0.4985,4.6037 -0.54892,1.56865 -1.73117,2.90027 -3.54673,3.99484 l -0.25692,0.1549 m -0.28398,-2.91146 c 1.11331,-0.6712 1.93648,-1.49442 2.46951,-2.46966 0.54333,-0.95811 0.55685,-1.86537 0.0406,-2.72177 -0.52665,-0.87353 -1.34561,-1.30226 -2.45687,-1.2862 -1.08384,0.0229 -2.19098,0.37507 -3.32142,1.0566 l 3.26822,5.42103"
         style="font-size:30px"
         id="path7260" />
      <path
         d="m 292.47733,556.16625 c 0.69672,-1.63395 0.59095,-3.20468 -0.3173,-4.71221 -0.55736,-0.92508 -1.46547,-1.40533 -2.72432,-1.44077 -1.24856,-0.0183 -2.61803,0.42153 -4.10842,1.31947 -1.49041,0.89795 -2.51928,1.90309 -3.08662,3.01544 -0.55703,1.12948 -0.55687,2.15675 4.8e-4,3.08184 0.47477,0.78802 0.9903,1.35302 1.54659,1.69501 0.58372,0.34878 1.33009,0.54122 2.23911,0.57729 l -1.07925,0.65024 c -1.66715,-0.093 -2.92905,-0.85044 -3.7857,-2.27231 -0.9702,-1.61032 -1.20642,-3.24256 -0.70866,-4.89671 0.52521,-1.64735 1.69576,-3.01805 3.51165,-4.1121 1.81588,-1.09404 3.56618,-1.48311 5.25088,-1.1672 1.71214,0.32272 3.05331,1.28924 4.02351,2.89956 0.91857,1.52466 1.02434,3.0954 0.3173,4.71221 l -1.07925,0.65024"
         style="font-size:30px"
         id="path7262" />
      <path
         d="m 288.95437,568.41013 c -1.28666,-0.39307 -2.20317,-1.04378 -2.74951,-1.95213 -0.42264,-0.7027 -0.40458,-1.44873 0.0542,-2.23812 0.45877,-0.78939 1.15947,-1.46756 2.10211,-2.03452 l 8.35516,-5.02531 1.20607,2.00524 -8.35516,5.02531 c -1.52535,0.91744 -2.06125,1.75322 -1.60768,2.50733 0.32987,0.54843 0.91855,0.96454 1.76607,1.24832 l -0.77125,0.46388 m 13.77527,-12.31126 c -0.0853,0.4014 -0.29939,0.70519 -0.64214,0.91135 -0.3428,0.20617 -0.72004,0.25803 -1.13173,0.15556 -0.38428,-0.0956 -0.67949,-0.31482 -0.88564,-0.6576 -0.20618,-0.34277 -0.26661,-0.71486 -0.18127,-1.11626 0.11275,-0.39456 0.34052,-0.69493 0.68331,-0.9011 0.34276,-0.20616 0.70628,-0.26143 1.09055,-0.16581 0.41169,0.10246 0.72063,0.32508 0.92681,0.66784 0.20615,0.34279 0.25285,0.71146 0.14011,1.10602"
         style="font-size:30px"
         id="path7264" />
      <path
         d="m 300.34095,589.4643 -1.2003,-2.0087 8.36959,-5.00126 c 0.61804,-0.36932 1.02715,-0.89337 1.22733,-1.57214 0.21732,-0.68904 0.14645,-1.334 -0.2126,-1.93489 -0.63607,-1.06444 -1.79063,-1.8074 -3.46369,-2.22887 l -9.09065,5.43213 -1.20031,-2.0087 11.58866,-6.92481 1.2003,2.0087 -1.69967,1.01564 c 2.10498,0.55945 3.55758,1.50874 4.3578,2.84787 0.55397,0.92709 0.67738,1.91343 0.37025,2.95902 -0.30717,1.04559 -0.93288,1.8505 -1.87712,2.41475 l -8.36959,5.00126"
         style="font-size:30px"
         id="path7266" />
      <path
         d="m 314.80076,586.42605 -0.70586,-1.18582 6.03222,-3.59065 0.70585,1.18582 -6.03221,3.59065"
         style="font-size:30px"
         id="path7268" />
      <path
         d="m 315.67315,602.65277 -4.57299,-7.71678 c -3.07983,1.82512 -4.07935,3.64958 -2.99855,5.47339 0.77491,1.30763 1.84136,2.30301 3.19936,2.98614 l -1.08397,0.64236 c -1.42682,-0.64234 -2.52768,-1.61733 -3.30258,-2.92496 -0.89727,-1.51411 -1.06552,-3.05339 -0.50474,-4.61785 0.57797,-1.57466 1.77886,-2.90238 3.60267,-3.98318 1.8238,-1.08079 3.55649,-1.49151 5.19807,-1.23217 1.65875,0.24916 2.93677,1.13078 3.83405,2.64489 0.88705,1.4969 1.0416,3.03267 0.46364,4.60733 -0.56079,1.56446 -1.75308,2.88708 -3.57687,3.96789 l -0.25809,0.15294 m -0.26193,-2.91352 c 1.11836,-0.66275 1.94774,-1.47972 2.48813,-2.45089 0.55057,-0.95398 0.57095,-1.86111 0.0612,-2.72139 -0.52002,-0.87749 -1.33571,-1.31241 -2.44706,-1.30476 -1.08398,0.0147 -2.19376,0.35848 -3.32932,1.03142 l 3.22709,5.44562"
         style="font-size:30px"
         id="path7270" />
      <path
         d="m 320.04055,615.2196 c -1.05165,0.61842 -2.17724,0.67708 -3.37678,0.17599 -1.1823,-0.51125 -2.12829,-1.37026 -2.83795,-2.57706 -0.97325,-1.65505 -1.47243,-3.39166 -1.49754,-5.20984 l 1.08613,-0.63869 c 0.0251,1.81817 0.52428,3.55478 1.49754,5.20983 0.40551,0.6896 0.9363,1.17793 1.59235,1.465 0.66617,0.30429 1.29235,0.2841 1.87852,-0.0606 0.60339,-0.35484 0.94621,-0.91607 1.02846,-1.68368 0.0822,-0.76762 -0.015,-1.60371 -0.2917,-2.50827 -0.92947,-3.11931 -0.64425,-5.11997 0.85564,-6.00198 1.01716,-0.59815 2.09306,-0.66239 3.22772,-0.19274 1.16201,0.47676 2.08772,1.3013 2.77712,2.47362 0.83131,1.41368 1.20376,2.93479 1.11736,4.56333 l -1.08612,0.6387 c 0.0864,-1.62854 -0.28606,-3.14965 -1.11736,-4.56333 -0.37512,-0.63788 -0.87701,-1.0968 -1.50567,-1.37677 -0.61854,-0.26271 -1.19502,-0.23693 -1.72945,0.0773 -0.93098,0.54746 -1.10505,1.80992 -0.52224,3.78737 0.99331,3.26737 0.62796,5.40796 -1.09603,6.42177"
         style="font-size:30px"
         id="path7272" />
      <path
         d="m 322.74695,625.38481 c -1.27133,-0.3926 -2.14394,-0.9948 -2.61785,-1.80659 -0.40333,-0.69089 -0.36397,-1.39704 0.11807,-2.11846 0.4993,-0.7315 1.23258,-1.37957 2.19983,-1.94423 l 7.33206,-4.2803 -1.33098,-2.27993 0.95861,-0.55962 c 0.5344,0.91543 1.36523,1.42623 2.49251,1.53238 1.12725,0.10616 2.23496,-0.15838 3.32313,-0.79362 l 0.71086,1.21769 -3.88625,2.26871 1.45197,2.4872 -1.08815,0.63524 -1.45197,-2.4872 -7.33206,4.2803 c -0.46636,0.27224 -0.83267,0.49767 -1.09894,0.67627 -0.25619,0.19587 -0.46845,0.44716 -0.63678,0.75386 -0.16834,0.30669 -0.1668,0.60686 0.005,0.90049 0.2924,0.50089 0.83526,0.85558 1.62857,1.06407 l -0.77725,0.45374"
         style="font-size:30px"
         id="path7274" />
      <path
         d="m 343.87778,640.398 c -0.69242,1.36549 -1.9581,2.57563 -3.79707,3.63041 -1.83899,1.05477 -3.56113,1.48918 -5.16643,1.30324 -1.57802,-0.17856 -2.81978,-1.05721 -3.72529,-2.63594 -0.607,-1.05829 -0.98476,-2.25958 -1.13328,-3.60387 l -6.42776,3.68674 -1.16423,-2.02982 17.69584,-10.14974 1.16424,2.02982 -1.17105,0.67168 c 1.64077,0.64978 2.80446,1.57321 3.49108,2.77028 0.86569,1.50935 0.94368,2.95174 0.23395,4.3272 m -5.11056,1.34036 c 1.56138,-0.89557 2.66507,-1.80528 3.31106,-2.72914 0.6633,-0.93381 0.68152,-1.9472 0.0546,-3.04018 -0.54731,-0.95419 -1.57169,-1.63473 -3.07315,-2.04163 l -7.91108,4.53753 c 0.0689,1.2055 0.38199,2.29402 0.93924,3.26557 0.56718,0.98887 1.47088,1.43891 2.71109,1.35009 1.25755,-0.0988 2.58028,-0.54619 3.9682,-1.34224"
         style="font-size:30px"
         id="path7276" />
      <path
         d="m 341.43477,660.11539 -1.15157,-2.03703 1.17521,-0.66437 c -1.63671,-0.66 -2.79463,-1.59065 -3.47376,-2.79197 -0.75787,-1.34062 -1.0286,-2.61199 -0.81218,-3.81414 0.21641,-1.20215 0.94269,-2.15263 2.17884,-2.85145 1.27096,-0.7185 2.48823,-0.82078 3.6518,-0.30686 1.18097,0.50408 2.18484,1.48736 3.01161,2.94984 0.60038,1.06204 0.97065,2.26566 1.11081,3.61086 l 0.47009,-0.26574 c 0.94015,-0.5315 1.62557,-1.22914 2.05626,-2.09292 0.43066,-0.86378 0.42946,-1.6787 -0.004,-2.44476 -0.71852,-1.27097 -1.79885,-2.34887 -3.24101,-3.23371 l 0.80959,-0.45768 c 1.85095,0.99836 3.21442,2.27231 4.09042,3.82185 0.62006,1.09686 0.66178,2.26795 0.12517,3.51327 -0.51923,1.23548 -1.41432,2.21247 -2.68528,2.93098 l -7.31241,4.13383 m 1.1205,-3.32147 3.4734,-1.96357 c -0.0614,-1.20592 -0.36771,-2.29637 -0.91888,-3.27136 -0.45276,-0.80088 -1.12011,-1.33112 -2.00204,-1.59071 -0.85469,-0.25202 -1.67377,-0.15657 -2.45723,0.28634 -0.85312,0.48228 -1.3845,1.12729 -1.59412,1.93504 -0.20964,0.80774 -0.0635,1.65558 0.4385,2.54352 0.54133,0.95758 1.56145,1.64449 3.06037,2.06074"
         style="font-size:30px"
         id="path7278" />
      <path
         d="m 351.56833,670.39541 c -1.06592,0.59346 -2.19259,0.62559 -3.37998,0.0964 -1.16994,-0.53896 -2.09542,-1.42002 -2.77645,-2.6432 -0.934,-1.67752 -1.39212,-3.42541 -1.37439,-5.24367 l 1.10087,-0.61294 c -0.0177,1.81827 0.44039,3.56615 1.37439,5.24367 0.38916,0.69896 0.90829,1.19966 1.55739,1.50211 0.65883,0.3199 1.2853,0.31446 1.87943,-0.0163 0.61158,-0.34052 0.96753,-0.89351 1.06784,-1.65898 0.1003,-0.76547 0.0228,-1.60361 -0.23253,-2.51444 -0.85571,-3.14034 -0.52344,-5.13373 0.99681,-5.98016 1.03097,-0.57402 2.10809,-0.6129 3.23136,-0.11665 1.15046,0.50401 2.05649,1.35013 2.71808,2.53836 0.79777,1.43288 1.13428,2.96234 1.00954,4.58839 l -1.10087,0.61294 c 0.12475,-1.62606 -0.21177,-3.15552 -1.00954,-4.58839 -0.35999,-0.64655 -0.85093,-1.11716 -1.47281,-1.41186 -0.61218,-0.27721 -1.18911,-0.26502 -1.7308,0.0366 -0.94361,0.52537 -1.14738,1.78337 -0.61132,3.77401 0.91606,3.28986 0.50038,5.42125 -1.24702,6.39417"
         style="font-size:30px"
         id="path7280" />
      <path
         d="m 359.93424,693.77828 -1.11101,-2.05944 1.7426,-0.94008 c -2.07843,-0.65128 -3.48798,-1.6634 -4.22864,-3.03634 -0.51278,-0.95052 -0.5928,-1.94132 -0.24006,-2.97242 0.35273,-1.03111 1.01315,-1.8078 1.98127,-2.33006 l 8.58097,-4.6292 1.111,2.05943 -8.58097,4.6292 c -0.63367,0.34184 -1.07419,0.85219 -1.32154,1.53102 -0.22975,0.66934 -0.17845,1.31204 0.1539,1.92811 0.58874,1.09132 1.70959,1.88422 3.36256,2.37871 l 9.32025,-5.02802 1.11101,2.05943 -11.88134,6.40966"
         style="font-size:30px"
         id="path7282" />
      <path
         d="m 367.26108,707.63873 -1.08993,-2.07066 8.62777,-4.54138 c 0.63711,-0.33536 1.07396,-0.83652 1.31055,-1.50348 0.25425,-0.67627 0.21836,-1.32413 -0.10767,-1.94355 -0.57758,-1.09728 -1.69028,-1.90158 -3.3381,-2.4129 l -9.37108,4.93263 -1.08993,-2.07066 11.94614,-6.28806 1.08993,2.07066 -1.7521,0.92225 c 2.07165,0.67246 3.47079,1.6989 4.19743,3.07935 0.50303,0.95569 0.57293,1.94726 0.2097,2.97471 -0.36325,1.02745 -1.03157,1.79735 -2.00494,2.30972 l -8.62777,4.54137"
         style="font-size:30px"
         id="path7284" />
      <path
         d="m 378.83878,730.41184 -1.04707,-2.09266 1.20731,-0.60408 c -1.60124,-0.74193 -2.71061,-1.72996 -3.3281,-2.96409 -0.77859,-1.55609 -0.78347,-2.99611 -0.0146,-4.32008 0.78671,-1.33292 2.12803,-2.47369 4.02396,-3.42231 1.89591,-0.94863 3.62653,-1.28899 5.19186,-1.02111 1.59215,0.27683 2.79542,1.22906 3.60982,2.85668 0.54589,1.09105 0.85481,2.31185 0.92676,3.66242 l 7.16335,-3.58419 1.04707,2.09267 -18.78033,9.39675 m 1.28706,-3.26054 8.15603,-4.08088 c -3.6e-4,-1.20748 -0.25111,-2.31203 -0.75225,-3.31364 -0.51013,-1.01951 -1.39575,-1.51567 -2.65687,-1.48848 -1.24326,0.0182 -2.58032,0.38533 -4.0112,1.10127 -1.60974,0.80544 -2.77226,1.65547 -3.48755,2.5501 -0.6974,0.88567 -0.7642,1.89192 -0.20039,3.01875 0.4922,0.98372 1.47628,1.72135 2.95223,2.21288"
         style="font-size:30px"
         id="path7286" />
      <path
         d="m 384.2814,739.1909 c -1.2465,-0.50621 -2.10134,-1.23603 -2.56453,-2.18947 -0.35832,-0.73757 -0.27382,-1.47903 0.2535,-2.22437 0.52731,-0.74535 1.28567,-1.35836 2.2751,-1.83903 l 8.76989,-4.26047 1.02251,2.10478 -8.76989,4.26047 c -1.60107,0.7778 -2.20933,1.56248 -1.82479,2.35402 0.27965,0.57566 0.8289,1.04259 1.64774,1.40079 l -0.80953,0.39328 m 14.81793,-11.03422 c -0.12078,0.3922 -0.36105,0.67569 -0.72082,0.85048 -0.35981,0.17479 -0.74017,0.19281 -1.14109,0.054 -0.37422,-0.1295 -0.64872,-0.37414 -0.82349,-0.73394 -0.17481,-0.35978 -0.20182,-0.73577 -0.081,-1.12797 0.14747,-0.38294 0.40111,-0.66181 0.76092,-0.8366 0.35977,-0.17479 0.72677,-0.19743 1.10099,-0.0679 0.40092,0.13875 0.68878,0.38802 0.86359,0.74781 0.17477,0.35979 0.18841,0.73116 0.0409,1.1141"
         style="font-size:30px"
         id="path7288" />
      <path
         d="m 389.13158,751.91598 -0.9942,-2.11829 1.2221,-0.57358 c -1.58211,-0.78189 -2.66632,-1.79746 -3.25264,-3.04671 -0.65431,-1.39409 -0.8281,-2.6823 -0.52138,-3.86464 0.30672,-1.18234 1.10281,-2.07517 2.38827,-2.67848 1.32166,-0.62032 2.54318,-0.63024 3.66455,-0.0298 1.13945,0.59196 2.06608,1.64835 2.77987,3.16918 0.51834,1.1044 0.79651,2.33258 0.83453,3.68453 l 0.48883,-0.22943 c 0.97766,-0.45887 1.71389,-1.10267 2.20867,-1.9314 0.49476,-0.82873 0.5552,-1.64141 0.18133,-2.43803 -0.62033,-1.32167 -1.61604,-2.4782 -2.98715,-3.46958 l 0.84189,-0.39513 c 1.77014,1.1355 3.03335,2.50892 3.78964,4.12027 0.53532,1.14062 0.48835,2.31151 -0.14091,3.51268 -0.61119,1.19267 -1.57761,2.09916 -2.89927,2.71948 l -7.60413,3.56892 m 1.36851,-3.2272 3.61197,-1.69524 c 0.03,-1.20711 -0.19298,-2.31761 -0.66883,-3.33149 -0.39089,-0.83283 -1.01622,-1.41202 -1.87599,-1.73757 -0.83318,-0.31594 -1.65713,-0.28272 -2.47185,0.0997 -0.88715,0.41638 -1.46579,1.01935 -1.73591,1.80893 -0.27013,0.78958 -0.1885,1.64604 0.24487,2.56941 0.46735,0.99577 1.4326,1.75787 2.89574,2.2863"
         style="font-size:30px"
         id="path7290" />
      <path
         d="m 406.10323,760.77683 c -0.8283,1.2876 -2.21101,2.36208 -4.14812,3.22346 -1.93714,0.86135 -3.69465,1.11754 -5.27255,0.76855 -1.55152,-0.33885 -2.69701,-1.33977 -3.43648,-3.00277 -0.49569,-1.11476 -0.74874,-2.34836 -0.75913,-3.7008 l -6.7708,3.01071 -0.95075,-2.13814 18.64025,-8.2886 0.95075,2.13815 -1.23354,0.54851 c 1.56579,0.81402 2.62905,1.85151 3.18976,3.11247 0.70696,1.5899 0.63716,3.03272 -0.20939,4.32846 m -5.22076,0.81119 c 1.64471,-0.73135 2.83557,-1.52354 3.57257,-2.37656 0.75525,-0.86115 0.87691,-1.86738 0.36498,-3.01869 -0.44695,-1.00511 -1.39644,-1.78675 -2.84847,-2.34493 l -8.33329,3.70549 c -0.0546,1.20624 0.14561,2.32105 0.60067,3.34444 0.46318,1.04165 1.31617,1.58166 2.55897,1.62003 1.26106,0.0302 2.62258,-0.2797 4.08457,-0.92978"
         style="font-size:30px"
         id="path7292" />
      <path
         d="m 412.06326,774.51958 c -0.72459,1.38383 -2.14888,2.51691 -4.2729,3.39924 -2.12404,0.88232 -3.93196,1.0919 -5.42376,0.62877 -1.48414,-0.44469 -2.58681,-1.53511 -3.30801,-3.27127 -0.72888,-1.75464 -0.73103,-3.32387 -0.006,-4.7077 0.73224,-1.36537 2.16037,-2.48921 4.28441,-3.37153 2.12402,-0.88233 3.9281,-1.10115 5.41225,-0.65647 1.49179,0.46315 2.60214,1.57204 3.33103,3.32667 0.72119,1.73616 0.71567,3.28692 -0.0166,4.65229 m -9.58587,1.87043 c 1.13064,0.11506 2.56404,-0.18801 4.30021,-0.90921 1.73616,-0.72121 2.95317,-1.51912 3.65105,-2.39375 0.71632,-0.88231 0.87885,-1.79444 0.48757,-2.7364 -0.39898,-0.96043 -1.16378,-1.49818 -2.29442,-1.61324 -1.11218,-0.12274 -2.53635,0.17649 -4.27251,0.89769 -1.73617,0.72121 -2.96241,1.52296 -3.67875,2.40527 -0.69787,0.87462 -0.84732,1.79216 -0.44835,2.75259 0.39129,0.94196 1.14302,1.47431 2.2552,1.59705"
         style="font-size:30px"
         id="path7294" />
      <path
         d="m 416.5761,787.02748 c -0.0298,-0.63176 -0.14203,-1.19947 -0.33671,-1.70315 -0.41825,-1.08198 -1.43555,-1.91095 -3.05192,-2.48691 l -9.31809,3.60184 -0.84367,-2.18261 12.59201,-4.86736 0.84368,2.18261 -2.09867,0.81123 c 2.02723,0.69589 3.28603,1.6781 3.77638,2.94663 0.10815,0.27982 0.16545,0.62219 0.17189,1.02711 l -1.7349,0.67061"
         style="font-size:30px"
         id="path7296" />
      <path
         d="m 410.151,803.68692 -0.77369,-2.20839 1.27408,-0.44636 c -1.49442,-0.9387 -2.46976,-2.05923 -2.92604,-3.36161 -0.50918,-1.4534 -0.5511,-2.7526 -0.12576,-3.89763 0.42533,-1.14503 1.30807,-1.95229 2.64821,-2.42179 1.37788,-0.48273 2.59407,-0.36842 3.64859,0.34293 1.07337,0.70474 1.88779,1.84987 2.44327,3.43538 0.40336,1.15138 0.55523,2.40148 0.45559,3.75029 l 0.50963,-0.17855 c 1.01925,-0.35709 1.81711,-0.9227 2.39359,-1.69683 0.57645,-0.77414 0.7192,-1.57647 0.42826,-2.40697 -0.48274,-1.37789 -1.35572,-2.62965 -2.61893,-3.75529 l 0.8777,-0.3075 c 1.64552,1.30958 2.76256,2.80432 3.3511,4.48421 0.41659,1.18913 0.25082,2.34918 -0.4973,3.48016 -0.72928,1.12434 -1.78286,1.92788 -3.16073,2.41062 l -7.92757,2.77733 m 1.68952,-3.07135 3.7656,-1.31923 c 0.15253,-1.19781 0.0437,-2.32522 -0.32665,-3.38222 -0.3042,-0.86826 -0.8674,-1.50803 -1.68962,-1.9193 -0.79674,-0.39901 -1.6198,-0.44973 -2.46918,-0.15216 -0.92488,0.32402 -1.56182,0.86504 -1.91082,1.62307 -0.349,0.75802 -0.35488,1.61835 -0.0176,2.58098 0.3637,1.03813 1.24646,1.89442 2.6483,2.56886"
         style="font-size:30px"
         id="path7298" />
      <path
         d="m 416.17041,823.98057 -0.63392,-2.2525 9.38541,-2.64133 c 0.69306,-0.19507 1.24382,-0.52667 1.65228,-0.99482 0.42768,-0.47358 0.56297,-0.98953 0.40586,-1.54783 -0.29259,-1.03962 -1.07247,-1.81743 -2.33963,-2.33343 -0.3303,0.15527 -0.65908,0.27897 -0.98635,0.37108 l -9.38541,2.64134 -0.63392,-2.2525 9.38541,-2.64134 c 0.69306,-0.19505 1.24382,-0.52666 1.65228,-0.99481 0.42769,-0.47358 0.56297,-0.98952 0.40586,-1.54783 -0.25466,-0.90485 -1.08417,-1.63753 -2.48852,-2.19804 l -10.22287,2.87702 -0.63392,-2.25249 12.99518,-3.65724 0.63392,2.2525 -1.90596,0.5364 c 1.81532,0.8396 2.89366,1.86585 3.23502,3.07874 0.17878,0.63531 0.13376,1.25051 -0.13507,1.8456 -0.26344,0.61433 -0.68992,1.12912 -1.27946,1.54437 0.79842,0.25315 1.48769,0.67209 2.0678,1.25681 0.60475,0.59854 1.02091,1.30211 1.24849,2.11071 0.25463,0.90484 0.0755,1.74478 -0.53746,2.51983 -0.60756,0.79427 -1.44076,1.34041 -2.49961,1.63842 l -9.38541,2.64134"
         style="font-size:30px"
         id="path7300" />
      <path
         d="m 419.05506,838.9259 -0.41486,-2.30293 1.32862,-0.23934 c -1.32724,-1.16313 -2.11319,-2.42376 -2.35785,-3.78189 -0.27302,-1.51561 -0.10904,-2.80511 0.49195,-3.8685 0.60099,-1.0634 1.60024,-1.72097 2.99775,-1.97272 1.43686,-0.25884 2.6197,0.0463 3.5485,0.91539 0.94847,0.86555 1.57163,2.12502 1.86949,3.77841 0.21628,1.20067 0.16863,2.45905 -0.14297,3.77515 l 0.53144,-0.0957 c 1.06288,-0.19149 1.94012,-0.62386 2.63173,-1.29713 0.69157,-0.67328 0.95936,-1.44295 0.80336,-2.309 -0.25886,-1.43688 -0.92298,-2.8109 -1.99236,-4.12208 l 0.91527,-0.16488 c 1.41782,1.55324 2.28452,3.20576 2.60011,4.95756 0.22337,1.24004 -0.1237,2.3593 -1.04119,3.35779 -0.89785,0.99492 -2.0652,1.62181 -3.50206,1.88067 l -8.26693,1.48923 m 2.1538,-2.76566 3.92679,-0.70738 c 0.33996,-1.15864 0.41067,-2.28908 0.21211,-3.39133 -0.16311,-0.90543 -0.6181,-1.62618 -1.36497,-2.16226 -0.72365,-0.51994 -1.52834,-0.70013 -2.41408,-0.54057 -0.96448,0.17374 -1.67893,0.60727 -2.14337,1.3006 -0.46444,0.69332 -0.60624,1.5419 -0.4254,2.54575 0.19501,1.08256 0.93132,2.06763 2.20892,2.95519"
         style="font-size:30px"
         id="path7302" />
    </g>
    <rect
       ry="0"
       rx="0"
       y="-7.1704459"
       x="574.76184"
       height="65"
       width="70"
       id="rect2993"
       style="fill:none;stroke:#008080;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3.99999991, 1.99999991, 1, 1.99999991;stroke-dashoffset:0"
       transform="matrix(0.503761,0.86384307,-0.86384307,0.503761,0,0)" />
    <rect
       style="fill:none;stroke:#008080;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:4.00000006, 2.00000003, 1.00000003, 2.00000003;stroke-dashoffset:0"
       id="rect3765"
       width="70"
       height="65"
       x="641.15967"
       y="-6.2654901"
       rx="0"
       ry="0"
       transform="matrix(0.49851537,0.86688086,-0.86688086,0.49851537,0,0)" />
    <rect
       ry="0"
       rx="0"
       y="5.6747155"
       x="706.10358"
       height="65"
       width="60"
       id="rect3767"
       style="fill:none;stroke:#008080;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3.99999994, 1.99999999, 0.99999998, 1.99999999;stroke-dashoffset:0"
       transform="matrix(0.50891928,0.86081425,-0.86081425,0.50891928,0,0)" />
    <rect
       style="fill:none;stroke:#008080;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3.99999997, 2, 1, 2;stroke-dashoffset:0"
       id="rect3769"
       width="50"
       height="65"
       x="758.71515"
       y="-22.586481"
       rx="0"
       ry="0"
       transform="matrix(0.47623607,0.87931747,-0.87931747,0.47623607,0,0)" />
    <rect
       ry="0"
       rx="0"
       y="-128.2869"
       x="795.65741"
       height="62.057087"
       width="152.75591"
       id="rect3771"
       style="fill:none;stroke:#008080;stroke-width:0.91965157;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3.6786068, 1.83930334, 0.91965167, 1.83930334;stroke-dashoffset:0"
       transform="matrix(0.35715668,0.93404449,-0.93404449,0.35715668,0,0)" />
    <g
       transform="matrix(0.82918963,-0.55896741,0.55896741,0.82918963,0,0)"
       inkscape:transform-center-x="4.4962412"
       inkscape:transform-center-y="-4.4554741"
       style="font-size:45px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Iwona;-inkscape-font-specification:Iwona"
       id="text2989">
      <path
         d="m 237.7414,850.25476 c -1.14003,-1.82997 -2.67003,-3.26997 -4.59,-4.32 -1.89002,-1.07997 -3.91502,-1.61997 -6.075,-1.62 -3.33002,3e-5 -5.77501,1.29003 -7.335,3.87 -1.56001,2.58003 -2.34001,6.00002 -2.34,10.26 -1e-5,4.26001 0.77999,7.68001 2.34,10.26 1.55999,2.58001 4.00498,3.87 7.335,3.87 3.59998,0 6.91497,-0.98999 9.945,-2.97 l 0,2.07 c -3.03003,1.98 -6.34502,2.97 -9.945,2.97 -4.47002,0 -7.93501,-1.47 -10.395,-4.41 -2.46001,-2.96999 -3.69001,-6.89999 -3.69,-11.79 -1e-5,-4.88998 1.22999,-8.80497 3.69,-11.745 2.45999,-2.96997 5.92498,-4.45496 10.395,-4.455 2.12998,4e-5 4.13998,0.49503 6.03,1.485 1.88997,0.99003 3.43497,2.35503 4.635,4.095 l 0,2.43"
         style=""
         id="path7249" />
      <path
         d="m 258.48218,864.51976 -13.455,0 c -10e-6,5.37001 1.58999,8.055 4.77,8.055 2.27998,0 4.37998,-0.61499 6.3,-1.845 l 0,1.89 c -1.92002,1.35 -4.02002,2.025 -6.3,2.025 -2.64001,0 -4.75501,-0.96 -6.345,-2.88 -1.59,-1.94999 -2.385,-4.51499 -2.385,-7.695 0,-3.17998 0.795,-5.72998 2.385,-7.65 1.58999,-1.94998 3.70499,-2.92498 6.345,-2.925 2.60998,2e-5 4.70998,0.97502 6.3,2.925 1.58998,1.92002 2.38498,4.47002 2.385,7.65 l 0,0.45 m -3.96,-1.89 c -2e-5,-1.94998 -0.42002,-3.64498 -1.26,-5.085 -0.81002,-1.43998 -1.96501,-2.15998 -3.465,-2.16 -1.53001,2e-5 -2.71501,0.72002 -3.555,2.16 -0.81001,1.41002 -1.21501,3.10502 -1.215,5.085 l 9.495,0"
         style=""
         id="path7251" />
      <path
         d="m 278.92062,858.62476 c -1.56002,-2.15998 -3.66002,-3.23998 -6.3,-3.24 -1.62001,2e-5 -2.94001,0.79502 -3.96,2.385 -0.99001,1.59002 -1.48501,3.69002 -1.485,6.3 -10e-6,2.61001 0.49499,4.71001 1.485,6.3 1.01999,1.59001 2.33999,2.385 3.96,2.385 1.37998,0 2.50498,-0.225 3.375,-0.675 0.89998,-0.47999 1.72498,-1.28999 2.475,-2.43 l 0,1.89 c -1.41002,2.07 -3.36002,3.105 -5.85,3.105 -2.82001,0 -5.10001,-0.96 -6.84,-2.88 -1.71001,-1.94999 -2.56501,-4.51499 -2.565,-7.695 -10e-6,-3.17998 0.85499,-5.72998 2.565,-7.65 1.73999,-1.94998 4.01999,-2.92498 6.84,-2.925 2.66998,2e-5 4.76998,1.08002 6.3,3.24 l 0,1.89"
         style=""
         id="path7253" />
      <path
         d="m 291.91155,872.61976 c -1.50001,1.35 -3.04501,2.025 -4.635,2.025 -1.23,0 -2.175,-0.6 -2.835,-1.8 -0.66,-1.19999 -0.99,-2.62499 -0.99,-4.275 l 0,-14.625 3.51,0 0,14.625 c 0,2.67001 0.66,4.005 1.98,4.005 0.95999,0 1.94999,-0.43499 2.97,-1.305 l 0,1.35 m -5.175,-27.225 c 0.45,0.42003 0.675,0.93003 0.675,1.53 0,0.60003 -0.225,1.12503 -0.675,1.575 -0.42,0.42003 -0.93,0.63003 -1.53,0.63 -0.6,3e-5 -1.125,-0.20997 -1.575,-0.63 -0.42,-0.44997 -0.63,-0.97497 -0.63,-1.575 0,-0.59997 0.21,-1.10997 0.63,-1.53 0.45,-0.44997 0.975,-0.67497 1.575,-0.675 0.6,3e-5 1.11,0.22503 1.53,0.675"
         style=""
         id="path7255" />
    </g>
    <rect
       transform="matrix(0.82734714,-0.56169094,0.56169094,0.82734714,0,0)"
       style="fill:none;stroke:#008080;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3.99999978, 1.9999999, 0.99999996, 1.9999999;stroke-dashoffset:0"
       id="rect3773"
       width="194.01286"
       height="113.17416"
       x="175.06706"
       y="809.41803"
       rx="0"
       ry="0" />
    <rect
       style="fill:none;stroke:#008080;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3.99999997, 1.99999998, 1, 1.99999998;stroke-dashoffset:0"
       id="rect3787"
       width="1060.0001"
       height="1020"
       x="-6.1035153e-05"
       y="12.360841"
       rx="0"
       ry="0" />
    <rect
       style="fill:none;stroke:#008080;stroke-width:1;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:4.00000001, 2, 1, 2;stroke-dashoffset:0"
       id="rect4308"
       width="460"
       height="155"
       x="527.84229"
       y="-26.204351"
       rx="0"
       ry="0"
       transform="matrix(0.48292513,0.87566164,-0.87566164,0.48292513,0,0)" />
    <g
       transform="matrix(2.3185398,0,0,2.3185398,-683.9555,-1044.6717)"
       id="layer1-8"
       inkscape:label="Calque 1">
      <path
         inkscape:connector-curvature="0"
         id="path3007"
         d="m 664.99729,654.7941 c -0.97165,-3.16732 -3.59682,-16.13813 -5.08854,-25.14219 -2.99137,-18.05589 -4.38349,-32.97732 -5.10094,-54.67451 -0.28238,-8.53959 -2.51004,-11.24649 -1.8298,-11.24649 2.82778,0 19.15374,7.91109 25.29911,11.99238 12.37658,8.21958 18.92606,18.74124 19.57856,31.45273 0.2441,4.75551 0.13785,5.72066 -1.02871,9.34391 -2.68567,8.34152 -7.54548,18.74304 -17.97061,29.1591 -3.61501,3.61186 -9.34922,9.59398 -10.78264,10.78265 -2.2368,1.85487 -2.83986,-0.89642 -3.07643,-1.66758 z"
         style="fill:#ffcc00;fill-opacity:1;stroke:#ffcc00;stroke-width:0.99921262;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0"
         sodipodi:nodetypes="csssssssscc" />
      <path
         sodipodi:nodetypes="ssssssss"
         inkscape:connector-curvature="0"
         id="path3792"
         d="m 392.34969,654.33945 c -21.01871,-49.20118 -27.20832,-97.82124 -15.39989,-120.96768 6.89705,-13.51934 20.88367,-19.67638 38.80994,-17.08451 8.17657,1.18221 23.92626,4.34053 25.37483,5.7121 0.38519,0.36471 -3.38434,3.52038 -5.32117,6.57609 -4.77582,7.53471 -13.59934,25.79204 -17.81905,36.87057 -11.0807,29.09149 -18.25056,66.19899 -20.59074,101.76543 -0.20638,3.13669 -0.45967,-2.11765 -5.05392,-12.872 z"
         style="fill:#ff6600;fill-opacity:1;stroke:#ff6600;stroke-width:2;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0" />
      <path
         inkscape:connector-curvature="0"
         id="path3800"
         d="m 659.6783,501.37697 c -2.32457,0.18254 -4.63554,0.7783 -6.73004,1.81127 -1.19619,0.62935 -2.55003,1.56007 -2.64453,3.03612 -0.0533,2.06356 1.38811,3.95547 3.28485,4.67629 2.24586,0.88314 4.80077,0.66421 7.04242,-0.11235 3.30401,-1.2278 5.79168,-4.03779 7.27879,-7.16473 0.17924,-0.50913 0.93604,-1.39354 -0.0862,-1.2817 -2.66099,-0.42607 -5.33029,-0.91746 -8.03145,-0.96818 l -0.11381,0.003 z"
         style="fill:#ddafe9;fill-opacity:1;stroke:#ddafe9;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
      <path
         sodipodi:nodetypes="csssssccc"
         inkscape:connector-curvature="0"
         id="path3794"
         d="m 578.80989,789.72063 c -23.32273,-8.15737 -33.49713,-20.50991 -31.22416,-32.62588 1.49377,-7.96247 12.51465,-20.8437 29.78472,-34.67555 9.8613,-7.89806 35.84172,-26.23573 40.58446,-29.12029 1.14694,-0.69758 0.1926,2.99527 -0.37919,10.86886 -2.19579,30.23646 -6.65443,51.981 -15.23634,71.45272 -3.72069,8.44198 -8.50455,18.89224 -9.62408,18.76319 -0.35877,-0.0413 -6.18317,-1.67097 -9.88755,-2.96662 z"
         style="fill:#00ccff;fill-opacity:1;stroke:#00ccff;stroke-opacity:1" />
      <path
         sodipodi:nodetypes="zcsscsz"
         inkscape:connector-curvature="0"
         id="path2985"
         d="m 411.31698,699.86309 c -49.8102,-78.02369 -78.30419,-243.65316 58.48655,-165.26508 1.43718,0.61504 -2.0856,0.67762 -2.72898,0.30382 -135.87891,-78.94554 -100.53198,90.20404 -56.68196,158.17157 28.57143,44.28572 168.57142,262.85714 -94.28572,162.85714 -1.50165,-0.5424 -0.69994,-8.16718 0.90478,-7.547 239.71544,92.64396 144.11553,-70.49676 94.30533,-148.52045 z"
         style="fill:#000000;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <path
         sodipodi:nodetypes="scssscsss"
         inkscape:connector-curvature="0"
         id="path2989"
         d="m 699.18299,605.89916 c -3.85252,-54.40181 -114.73182,-53.82168 -156.29061,-54.25384 -1.32856,-0.022 -0.36044,1.50984 0.18681,1.50222 48.39981,-0.67368 152.45649,0.0865 156.59911,52.55961 4.28572,54.28589 -160.71429,118.79483 -152.14286,157.36626 8.57143,38.57142 111.42857,42.85714 151.42857,42.85714 3.57143,0.35714 4.41833,-4.40812 -0.55003,-4.74693 -58.31047,-3.97642 -206.02141,-8.74237 -128.51312,-71.45528 44.36713,-35.89799 132.98622,-71.52329 129.28213,-123.82918 z"
         style="fill:#000000;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <path
         sodipodi:nodetypes="cccc"
         inkscape:connector-curvature="0"
         id="path2991"
         d="m 733.91622,734.95854 c -73.61365,8.33242 -88.58771,-155.09604 -76.90831,-207.20046 -19.51736,87.16418 20.40332,220.49231 77.34839,211.95055 4.16688,-0.75761 3.09545,-5.5077 -0.44008,-4.75009 z"
         style="fill:#000000;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <path
         sodipodi:nodetypes="zsccscsz"
         inkscape:connector-curvature="0"
         id="path3763"
         d="m 665.67537,508.00792 c 4.13445,-4.23376 5.65909,-16.14927 5.62971,-15.91986 -0.68185,5.32365 -2.02371,10.79795 -5.42022,15.06936 -2.26421,2.88157 -5.8962,3.59134 -7.48624,3.23957 -4.66074,-0.50154 -4.91608,-4.18437 -5.65193,-8.23608 -0.10462,-0.57606 -0.55251,-2.23088 -2.40042,-0.71228 -2.28916,2.55542 -2.32441,6.5932 -0.85636,8.03346 5.2342,5.13508 12.05102,2.75959 16.18546,-1.47417 z"
         style="fill:#000000;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <path
         d="m 493.65967,486.07849 c 117.77719,-29.78972 182.70067,302.04509 48.13304,341.8111 -193.81862,57.27524 -172.17339,-310.43722 -48.13304,-341.8111 z m 13.68655,-7.29079 c -115.06127,1.20709 -170.54197,344.38926 -2.66791,357.14286 182.47821,13.8631 117.72918,-358.34995 2.66791,-357.14286 z"
         style="fill:#000000;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
         id="path3846"
         inkscape:connector-curvature="0" />
    </g>
    <path
       style="fill:none;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 260,532.99207 c 60,100 160,260 160,330"
       id="path3153"
       inkscape:connector-curvature="0"
       transform="translate(0,-10.631225)"
       sodipodi:nodetypes="cc" />
    <g
       transform="matrix(-0.40176277,-0.91574378,0.91574378,-0.40176277,0,0)"
       inkscape:transform-center-x="1.425589"
       inkscape:transform-center-y="2.2692019"
       style="font-size:45px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Iwona;-inkscape-font-specification:Iwona"
       id="text3183">
      <path
         d="m -759.30965,565.75518 -13.455,0 c 0,5.37 1.59,8.055 4.77,8.055 2.27999,0 4.37999,-0.615 6.3,-1.845 l 0,1.89 c -1.92001,1.35 -4.02001,2.025 -6.3,2.025 -2.64,0 -4.755,-0.96 -6.345,-2.88 -1.59,-1.95 -2.385,-4.515 -2.385,-7.695 0,-3.17999 0.795,-5.72999 2.385,-7.65 1.59,-1.94998 3.705,-2.92498 6.345,-2.925 2.60999,2e-5 4.70999,0.97502 6.3,2.925 1.58998,1.92001 2.38498,4.47001 2.385,7.65 l 0,0.45 m -3.96,-1.89 c -1e-5,-1.94999 -0.42001,-3.64499 -1.26,-5.085 -0.81001,-1.43999 -1.96501,-2.15999 -3.465,-2.16 -1.53001,10e-6 -2.715,0.72001 -3.555,2.16 -0.81,1.41001 -1.215,3.10501 -1.215,5.085 l 9.495,0"
         style=""
         id="path7242" />
      <path
         d="m -739.77121,569.67018 c -2e-5,1.83 -0.78001,3.33 -2.34,4.5 -1.56001,1.14 -3.39001,1.71 -5.49,1.71 -2.88001,0 -5.505,-0.675 -7.875,-2.025 l 0,-1.89 c 2.37,1.35 4.99499,2.025 7.875,2.025 1.19999,0 2.23499,-0.315 3.105,-0.945 0.89999,-0.63 1.34999,-1.455 1.35,-2.475 -10e-6,-1.05 -0.46501,-1.92 -1.395,-2.61 -0.93001,-0.69 -2.08501,-1.2 -3.465,-1.53 -4.74,-1.16999 -7.11,-3.05999 -7.11,-5.67 0,-1.76999 0.735,-3.20999 2.205,-4.32 1.5,-1.13998 3.26999,-1.70998 5.31,-1.71 2.45999,2e-5 4.70999,0.67502 6.75,2.025 l 0,1.89 c -2.04001,-1.34999 -4.29001,-2.02499 -6.75,-2.025 -1.11001,10e-6 -2.08501,0.30001 -2.925,0.9 -0.81,0.60001 -1.215,1.36501 -1.215,2.295 0,1.62001 1.49999,2.80501 4.5,3.555 4.97999,1.20001 7.46998,3.3 7.47,6.3"
         style=""
         id="path7244" />
      <path
         d="m -724.57527,573.85518 c -1.47001,1.35 -2.91001,2.025 -4.32,2.025 -1.20001,0 -2.08501,-0.585 -2.655,-1.755 -0.57001,-1.2 -0.85501,-2.64 -0.855,-4.32 l 0,-12.735 -3.96,0 0,-1.665 c 1.59,2e-5 2.87999,-0.68998 3.87,-2.07 0.98999,-1.37998 1.48499,-3.01498 1.485,-4.905 l 2.115,0 0,6.75 4.32,0 0,1.89 -4.32,0 0,12.735 c -10e-6,0.81 0.015,1.455 0.045,1.935 0.06,0.48 0.22499,0.945 0.495,1.395 0.26999,0.45 0.65999,0.675 1.17,0.675 0.86999,0 1.73999,-0.435 2.61,-1.305 l 0,1.35"
         style=""
         id="path7246" />
    </g>
    <rect
       ry="0"
       rx="0"
       y="527.99518"
       x="-844.39709"
       height="109.72966"
       width="188.108"
       id="rect4875"
       style="fill:none;stroke:#008080;stroke-width:0.99999994;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3.99999977, 1.99999989, 0.99999997, 1.99999989;stroke-dashoffset:0"
       transform="matrix(-0.38507619,-0.92288479,0.92288479,-0.38507619,0,0)" />
  </g>
  <ns1:frame
     ns1:transition-profile="accelerate-decelerate"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="1500.0"
     ns1:timeout-enable="true"
     ns1:hide="true"
     ns1:sequence="1"
     ns1:title="Ceci"
     ns1:refid="rect2993"
     id="frame1" />
  <ns1:frame
     ns1:transition-profile="linear"
     ns1:transition-duration-ms="0.0"
     ns1:timeout-ms="1500.0"
     ns1:timeout-enable="true"
     ns1:hide="true"
     ns1:sequence="2"
     ns1:title="n'est"
     ns1:refid="rect3765"
     id="frame2" />
  <ns1:frame
     ns1:transition-profile="linear"
     ns1:transition-duration-ms="0.0"
     ns1:timeout-ms="1500.0"
     ns1:timeout-enable="true"
     ns1:hide="true"
     ns1:sequence="3"
     ns1:title="pas"
     ns1:refid="rect3767"
     id="frame3" />
  <ns1:frame
     ns1:transition-profile="linear"
     ns1:transition-duration-ms="0.0"
     ns1:timeout-ms="1500.0"
     ns1:timeout-enable="true"
     ns1:hide="true"
     ns1:sequence="4"
     ns1:title="un"
     ns1:refid="rect3769"
     id="frame4" />
  <ns1:frame
     ns1:transition-profile="linear"
     ns1:transition-duration-ms="0.0"
     ns1:timeout-ms="2000.0"
     ns1:timeout-enable="true"
     ns1:hide="true"
     ns1:sequence="5"
     ns1:title="diaporama"
     ns1:refid="rect3771"
     id="frame5" />
  <ns1:frame
     ns1:transition-profile="accelerate-decelerate"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="1500.0"
     ns1:timeout-enable="true"
     ns1:hide="true"
     ns1:sequence="7"
     ns1:title="Ceci"
     ns1:refid="rect3773"
     id="frame7" />
  <ns1:frame
     ns1:transition-profile="accelerate-decelerate"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="true"
     ns1:hide="true"
     ns1:sequence="9"
     ns1:title="Sozi"
     ns1:refid="rect3787"
     id="frame9" />
  <ns1:frame
     ns1:transition-profile="accelerate-decelerate"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="1000.0"
     ns1:timeout-enable="true"
     ns1:hide="true"
     ns1:sequence="6"
     ns1:title="Ceci n'est pas un diaporama"
     ns1:refid="rect4308"
     id="frame6" />
  <ns1:frame
     ns1:transition-profile="accelerate-decelerate"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="1500.0"
     ns1:timeout-enable="true"
     ns1:hide="true"
     ns1:sequence="8"
     ns1:title="est"
     ns1:refid="rect4875"
     id="frame8" />
  <script
     ns1:version="12.04-16224053"
     id="sozi-script">
function module(globals, path, body) {
    &quot;use strict&quot;;
    
    // Start name lookup in the global object
	var current = globals;
	
	// For each name in the given path
	path.split(&quot;.&quot;).forEach(function (name) {
	    // If the current path element does not exist
	    // in the current namespace, create a new sub-namespace
		if (typeof current[name] === &quot;undefined&quot;) {
			current[name] = {};
		}
		
		// Move to the namespace for the current path element
		current = current[name];
	});
	
	// Execute the module body in the last namespace
	body(current, globals);
}

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 *
 * @depend module.js
 */

module(this, &quot;sozi.events&quot;, function (exports) {
    &quot;use strict&quot;;
    
    var listenerRegistry = {};

    /*
     * Adds a listener for a given event type.
     *
     * The event type is provided as a string by the key parameter.
     * The function to be executed is provided by the handler parameter.
     */
    exports.listen = function (key, handler) {
        if (!listenerRegistry.hasOwnProperty(key)) {
            listenerRegistry[key] = [];
        }
        listenerRegistry[key].push(handler);
    };
    
    /*
     * Fire an event of the given type.
     *
     * All event handlers added for the given event type are
     * executed.
     * Additional arguments provided to this function are passed
     * to the event handlers.
     */
    exports.fire = function (key) {
        var args = Array.prototype.slice.call(arguments, 1);
        if (listenerRegistry.hasOwnProperty(key)) {
            listenerRegistry[key].forEach(function (listener) {
                listener.apply(null, args);
            });
        }
    };
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 *
 * @depend module.js
 * @depend events.js
 */

module(this, &quot;sozi.framenumber&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
    var document = window.document;
    
    // The SVG group containing the frame number
    var svgGroup;
    
    // The SVG text element and its text node containing the frame number
    var svgText, svgTextNode;
    
    // The SVG circle enclosing the frame number
    var svgCircle;
    
    // Constant: the SVG namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;
    
    function adjust() {
        var textBBox = svgText.getBBox(),
            d = Math.max(textBBox.width, textBBox.height) * 0.75,
            t = d * 1.25;
        svgCircle.setAttribute(&quot;r&quot;, d);
        svgGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + t + &quot;,&quot; + t + &quot;)&quot;);
    }
    
    function onDisplayReady() {
        svgGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgText = document.createElementNS(SVG_NS, &quot;text&quot;);
        svgCircle = document.createElementNS(SVG_NS, &quot;circle&quot;);
        
        svgGroup.setAttribute(&quot;id&quot;, &quot;sozi-framenumber&quot;);

        svgCircle.setAttribute(&quot;cx&quot;, 0);
        svgCircle.setAttribute(&quot;cy&quot;, 0);
        svgGroup.appendChild(svgCircle);
        
        svgTextNode = document.createTextNode(sozi.location.getFrameIndex() + 1);
        svgText.setAttribute(&quot;text-anchor&quot;, &quot;middle&quot;);
        svgText.setAttribute(&quot;dominant-baseline&quot;, &quot;central&quot;);
        svgText.setAttribute(&quot;x&quot;, 0);
        svgText.setAttribute(&quot;y&quot;, 0);
        svgText.appendChild(svgTextNode);
        svgGroup.appendChild(svgText);
        
        document.documentElement.appendChild(svgGroup);
        
        adjust();
    }

    function onFrameChange(index) {
        svgTextNode.nodeValue = index + 1;
    }
    
	sozi.events.listen(&quot;displayready&quot;, onDisplayReady);
	sozi.events.listen(&quot;framechange&quot;, onFrameChange);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 *
 * @depend module.js
 * @depend events.js
 */

module(this, &quot;sozi.framelist&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
	var document = window.document;
	
    // Constant: the margin around the text of the frame list
    var MARGIN = 5;
    
	// The SVG group that will contain the frame list
    var svgTocGroup;
    
    // The SVG group that will contain the frame titles
    var svgTitlesGroup;
    
    // The current height of the frame list,
    // computed during the initialization
    var tocHeight = 0;
    
    // The X coordinate of the frame list in its hidden state
    var translateXHidden;
    
    // The X coordinate of the frame list when it is completely visible
    var translateXVisible;
    
    // The initial X coordinate of the frame list before starting an animation.
    // This variable is set before showing/hiding the frame list.
    var translateXStart;
    
    // The final X coordinate of the frame list for the starting animation.
    // This variable is set before showing/hiding the frame list.
    var translateXEnd;
    
    // The current X coordinate of the frame list for the running animation.
    // This variable is updated on each animation step.
    var translateX;
    
    // The animator object that will manage animations of the frame list
    var animator;
    
    // Constant: the duration of the showing/hiding animation, in milliseconds
    var ANIMATION_TIME_MS = 300;
    
    // Constant: the acceleration profile of the showing/hiding animation
    var ANIMATION_PROFILE = &quot;decelerate&quot;;
    
    // Constant: the SVG namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

	function onMouseOut(evt) {
        var rel = evt.relatedTarget,
            svgRoot = document.documentElement;
        while (rel &amp;&amp; rel !== svgTocGroup &amp;&amp; rel !== svgRoot) {
            rel = rel.parentNode;
        }
        if (rel !== svgTocGroup) {
            exports.hide();
            sozi.player.restart();
            evt.stopPropagation();
        }
    }

	function onClickArrowUp(evt) {
        var ty = svgTitlesGroup.getCTM().f;
        if (ty &lt;= -window.innerHeight / 2) {
            ty += window.innerHeight / 2;
        } else if (ty &lt; 0) {
            ty = 0;
        }
        svgTitlesGroup.setAttribute(&quot;transform&quot;, &quot;translate(0,&quot; + ty + &quot;)&quot;);
        evt.stopPropagation();
	}

	function onClickArrowDown(evt) {
        var ty = svgTitlesGroup.getCTM().f;
        if (ty + tocHeight &gt;= window.innerHeight * 3 / 2) {
            ty -= window.innerHeight / 2;
        } else if (ty + tocHeight &gt; window.innerHeight + 2 * MARGIN) {
            ty = window.innerHeight - tocHeight - 4 * MARGIN;
        }
        svgTitlesGroup.setAttribute(&quot;transform&quot;, &quot;translate(0,&quot; + ty + &quot;)&quot;);
        evt.stopPropagation();
    }

    function onAnimationStep(progress) {
        var profileProgress = sozi.animation.profiles[ANIMATION_PROFILE](progress),
            remaining = 1 - profileProgress;
        translateX = translateXEnd * profileProgress + translateXStart * remaining;
        svgTocGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + translateX + &quot;,0)&quot;);
    }
    
    function onAnimationDone() {
        // Empty
    }
    
    /*
     * Create a function that responds to clicks on frame list entries.
     */
    function makeClickHandler(index) {
        return function (evt) {
            sozi.player.previewFrame(index);
            evt.stopPropagation();
        };
    }
    
    /*
     * The default event handler, to prevent event propagation
     * through the frame list.
     */
    function defaultEventHandler(evt) {
	    evt.stopPropagation();
    }
    
    /*
     * Adds a table of contents to the document.
     *
     * The table of contents is a rectangular region with the list of frame titles.
     * Clicking on a title moves the presentation to the corresponding frame.
     *
     * The table of contents is hidden by default.
     */
    function onDisplayReady() {
        svgTocGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgTocGroup.setAttribute(&quot;id&quot;, &quot;sozi-toc&quot;);
        document.documentElement.appendChild(svgTocGroup);

        svgTitlesGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgTocGroup.appendChild(svgTitlesGroup);
    
        // The background rectangle of the frame list
        var tocBackground = document.createElementNS(SVG_NS, &quot;rect&quot;);
        tocBackground.setAttribute(&quot;id&quot;, &quot;sozi-toc-background&quot;);
        tocBackground.setAttribute(&quot;x&quot;, MARGIN);
        tocBackground.setAttribute(&quot;y&quot;, MARGIN);
        tocBackground.setAttribute(&quot;rx&quot;, MARGIN);
        tocBackground.setAttribute(&quot;ry&quot;, MARGIN);
        tocBackground.addEventListener(&quot;click&quot;, defaultEventHandler, false);
        tocBackground.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        tocBackground.addEventListener(&quot;mouseout&quot;, onMouseOut, false);
        svgTitlesGroup.appendChild(tocBackground);

        var tocWidth = 0;
        var currentFrameIndex = sozi.location.getFrameIndex();
        sozi.document.frames.forEach(function (frame, frameIndex) {
            var text = document.createElementNS(SVG_NS, &quot;text&quot;);
            text.appendChild(document.createTextNode(frame.title));
            svgTitlesGroup.appendChild(text);

            if (frameIndex === currentFrameIndex) {
                text.setAttribute(&quot;class&quot;, &quot;sozi-toc-current&quot;);
            }
                     
            var textWidth = text.getBBox().width;
            tocHeight += text.getBBox().height;
            if (textWidth &gt; tocWidth) {
                tocWidth = textWidth;
            }

            text.setAttribute(&quot;x&quot;, 2 * MARGIN);
            text.setAttribute(&quot;y&quot;, tocHeight + MARGIN);
            text.addEventListener(&quot;click&quot;, makeClickHandler(frameIndex), false);
            text.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        });

        // The &quot;up&quot; button
        var tocUp = document.createElementNS(SVG_NS, &quot;path&quot;);
        tocUp.setAttribute(&quot;class&quot;, &quot;sozi-toc-arrow&quot;);
        tocUp.setAttribute(&quot;d&quot;, &quot;M&quot; + (tocWidth + 3 * MARGIN) + &quot;,&quot; + (5 * MARGIN) +
                           &quot; l&quot; + (4 * MARGIN) + &quot;,0&quot; +
                           &quot; l-&quot; + (2 * MARGIN) + &quot;,-&quot; + (3 * MARGIN) +
                           &quot; z&quot;);
        tocUp.addEventListener(&quot;click&quot;, onClickArrowUp, false);
        tocUp.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        svgTocGroup.appendChild(tocUp);

        // The &quot;down&quot; button
        var tocDown = document.createElementNS(SVG_NS, &quot;path&quot;);
        tocDown.setAttribute(&quot;class&quot;, &quot;sozi-toc-arrow&quot;);
        tocDown.setAttribute(&quot;d&quot;, &quot;M&quot; + (tocWidth + 3 * MARGIN) + &quot;,&quot; + (7 * MARGIN) +
                             &quot; l&quot; + (4 * MARGIN) + &quot;,0&quot; +
                             &quot; l-&quot; + (2 * MARGIN) + &quot;,&quot; + (3 * MARGIN) +
                             &quot; z&quot;);
        tocDown.addEventListener(&quot;click&quot;, onClickArrowDown, false);
        tocDown.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        svgTocGroup.appendChild(tocDown);

        tocBackground.setAttribute(&quot;width&quot;, tocWidth + 7 * MARGIN);
        tocBackground.setAttribute(&quot;height&quot;, tocHeight + 2 * MARGIN);
        
        translateXHidden = -tocWidth - 9 * MARGIN;
        translateXVisible = 0;
        translateX = translateXEnd = translateXHidden;
        
        svgTocGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + translateXHidden + &quot;,0)&quot;);
        animator = new sozi.animation.Animator(onAnimationStep, onAnimationDone);
    }

	/*
	 * Highlight the current frame title in the frame list.
	 *
	 * This handler is called on each frame change,
	 * even when the frame list is hidden.
	 */
    function onFrameChange(index) {
        var currentElementList = Array.prototype.slice.call(document.getElementsByClassName(&quot;sozi-toc-current&quot;));
        currentElementList.forEach(function (svgElement) {
            svgElement.removeAttribute(&quot;class&quot;);
        });

        var textElements = svgTitlesGroup.getElementsByTagName(&quot;text&quot;);
        textElements[index].setAttribute(&quot;class&quot;, &quot;sozi-toc-current&quot;);
    }
    
    /*
     * Makes the table of contents visible.
     */
    exports.show = function () {
        translateXStart = translateX;
        translateXEnd = translateXVisible;
        animator.start(ANIMATION_TIME_MS); // FIXME depends on current elapsed time
    };

    /*
     * Makes the table of contents invisible.
     */
    exports.hide = function () {
        translateXStart = translateX;
        translateXEnd = translateXHidden;
        animator.start(ANIMATION_TIME_MS); // FIXME depends on current elapsed time
    };

    /*
     * Returns true if the table of contents is visible, false otherwise.
     */
    exports.isVisible = function () {
        return translateXEnd === translateXVisible;
    };

	sozi.events.listen(&quot;displayready&quot;, onDisplayReady);
	sozi.events.listen(&quot;cleanup&quot;, exports.hide);
	sozi.events.listen(&quot;framechange&quot;, onFrameChange);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 *
 * @depend module.js
 */

module(this, &quot;sozi.animation&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // The browser-specific function to request an animation frame
    var requestAnimationFrame =
            window.mozRequestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.msRequestAnimationFrame ||
            window.oRequestAnimationFrame;

    // Constant: the default time step
    // for browsers that do not support animation frames
    var TIME_STEP_MS = 40;
    
    // The handle provided by setInterval
    // for browsers that do not support animation frames
    var timer;
    
    // The list of running animators
    var animatorList = [];
    
    /*
     * This function is called periodically and triggers the
     * animation steps in all animators managed by this module.
     *
     * If all animators are removed from the list of animators
     * managed by this module, then the periodic calling is disabled.
     *
     * This function can be called either through requestAnimationFrame()
     * if the browser supports it, or through setInterval().
     */
    function loop(timestamp) {
        if (animatorList.length &gt; 0) {
            // If there is at least one animator,
            // and if the browser provides animation frames,
            // schedule this function to be called again in the next frame.
            if (requestAnimationFrame) {
                requestAnimationFrame(loop);
            }

            // Step all animators
            animatorList.forEach(function (animator) {
                animator.step(timestamp);
            });
        }
        else {
            // If all animators have been removed,
            // and if this function is called periodically
            // through setInterval, disable the periodic calling.
            if (!requestAnimationFrame) {
                window.clearInterval(timer);
            }
        }
    }
    
    /*
     * Start the animation loop.
     *
     * This function delegates the periodic update of all animators
     * to the loop() function, either through requestAnimationFrame()
     * if the browser supports it, or through setInterval().
     */
    function start() {
        if (requestAnimationFrame) {
            requestAnimationFrame(loop);
        }
        else {
            timer = window.setInterval(function () {
                loop(Date.now());
            }, TIME_STEP_MS);
        }
    }
    
    /*
     * Add a new animator object to the list of animators managed
     * by this module.
     *
     * If the animator list was empty before calling this function,
     * then the animation loop is started.
     */
    function addAnimator(animator) {
        animatorList.push(animator);
        if (animatorList.length === 1) {
            start();
        }
    }
    
    /*
     * Remove the given animator from the list of animators
     * managed by this module.
     */
    function removeAnimator(animator) {
        animatorList.splice(animatorList.indexOf(animator), 1);
    }
    
    /*
     * Construct a new animator.
     *
     * Parameters:
     * - onStep: the function to call on each animation step
     * - onDone: the function to call when the animation time is elapsed
     *
     * The onStep() function is expected to have the following parameters:
     *  - progress: a number between 0 and 1 (included) corresponding to
     *    the elapsed fraction of the total duration
     *  - data: an optional object passed to the application-specific animation code
     *
     * The new animator is initialized in the &quot;stopped&quot; state.
     */
    exports.Animator = function (onStep, onDone) {
        this.onStep = onStep;
        this.onDone = onDone;

        this.durationMs = 0;
        this.data = {};
        this.initialTime = 0;
        this.started = false;
    };

    /*
     * Start the current animator.
     *
     * Parameters:
     *  - durationMs: the animation duration, in milliseconds
     *  - data: an object to pass to the onStep function
     *
     * The current animator is added to the list of animators managed
     * by this module and is put in the &quot;started&quot; state.
     * It will be removed from the list automatically when the given duration
     * has elapsed.
     *
     * The onStep() function is called once before starting the animation.
     */
    exports.Animator.prototype.start = function (durationMs, data) {
        this.durationMs = durationMs;
        this.data = data;
        this.initialTime = Date.now();
        this.onStep(0, this.data);

        if (!this.started) {
            this.started = true;
            addAnimator(this);
        }
    };

    /*
     * Stop the current animator.
     *
     * The current animator is removed from the list of animators managed
     * by this module and is put in the &quot;stopped&quot; state.
     */
    exports.Animator.prototype.stop = function () {
        if (this.started) {
            removeAnimator(this);
            this.started = false;
        }
    };

    /*
     * Perform one animation step.
     *
     * This function is called automatically by the loop() function.
     * It calls the onStep() function of this animator.
     * If the animation duration has elapsed, the onDone() function of
     * the animator is called.
     */
    exports.Animator.prototype.step = function (timestamp) {
        var elapsedTime = timestamp - this.initialTime;
        if (elapsedTime &gt;= this.durationMs) {
            this.stop();
            this.onStep(1, this.data);
            this.onDone();
        } else {
            this.onStep(elapsedTime / this.durationMs, this.data);
        }
    };

    /*
     * The acceleration profiles.
     *
     * Each profile is a function that operates in the interval [0, 1]
     * and produces a result in the same interval.
     *
     * These functions are meant to be called in onStep() functions
     * to transform the progress indicator according to the desired
     * acceleration effect.
     */
    exports.profiles = {
        &quot;linear&quot;: function (x) {
            return x;
        },

        &quot;accelerate&quot;: function (x) {
            return Math.pow(x, 3);
        },

        &quot;strong-accelerate&quot;: function (x) {
            return Math.pow(x, 5);
        },

        &quot;decelerate&quot;: function (x) {
            return 1 - Math.pow(1 - x, 3);
        },

        &quot;strong-decelerate&quot;: function (x) {
            return 1 - Math.pow(1 - x, 5);
        },

        &quot;accelerate-decelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = Math.pow(2 * xs, 3) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;strong-accelerate-decelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = Math.pow(2 * xs, 5) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;decelerate-accelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = (1 - Math.pow(1 - 2 * xs, 2)) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;strong-decelerate-accelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = (1 - Math.pow(1 - 2 * xs, 3)) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        }
    };
});


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 *
 * @depend module.js
 * @depend events.js
 */

module(this, &quot;sozi.display&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // The global document object
    var document = window.document;
    
    // The initial bounding box of the whole document,
    // assigned in onDocumentReady()
    var initialBBox;
    
    // Constant: the Sozi namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

    // The geometry of each layer managed by Sozi
    exports.layers = {};

    /*
     * Initializes the current Display.
     *
     * This method prepares the DOM representation of the current SVG document.
     * All the image is embedded into a global &quot;g&quot; element on which transformations will be applied.
     * A clipping rectangle is added.
     *
     * This method must be called when the document is ready to be manipulated.
     */
    function onDocumentReady() {
        var svgRoot = document.documentElement; // TODO check SVG tag
        
        // Save the initial bounding box of the document
        // and force its dimensions to the browser window
        initialBBox = svgRoot.getBBox();
        svgRoot.setAttribute(&quot;width&quot;, window.innerWidth);
        svgRoot.setAttribute(&quot;height&quot;, window.innerHeight);
        
        // Initialize display geometry for all layers
        sozi.document.idLayerList.forEach(function (idLayer) {
            exports.layers[idLayer] = {
                geometry: {
                    cx: 0,
                    cy: 0,
                    width: 1,
                    height: 1,
                    rotate: 0,
                    clip: true
                },
                svgClipRect: document.createElementNS(SVG_NS, &quot;rect&quot;),
                svgLayer: document.getElementById(idLayer)
            };

            // Add a clipping path
            var svgClipPath = document.createElementNS(SVG_NS, &quot;clipPath&quot;);
            svgClipPath.setAttribute(&quot;id&quot;, &quot;sozi-clip-path-&quot; + idLayer);
            svgClipPath.appendChild(exports.layers[idLayer].svgClipRect);
            svgRoot.appendChild(svgClipPath);

            // Create a group that will support the clipping operation
            // and move the layer group into that new group
            var svgClippedGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
            svgClippedGroup.setAttribute(&quot;clip-path&quot;, &quot;url(#sozi-clip-path-&quot; + idLayer + &quot;)&quot;);
            
            // Adding the layer group to the clipped group must preserve layer ordering
            svgRoot.insertBefore(svgClippedGroup, exports.layers[idLayer].svgLayer);
            svgClippedGroup.appendChild(exports.layers[idLayer].svgLayer);
        });

        sozi.events.fire(&quot;displayready&quot;);
    }

    /*
     * Resizes the SVG document to fit the browser window.
     */
    function resize() {
        var svgRoot = document.documentElement;
        svgRoot.setAttribute(&quot;width&quot;, window.innerWidth);
        svgRoot.setAttribute(&quot;height&quot;, window.innerHeight);
        exports.update();
    }

    /*
     * Returns an object with the geometrical properties of the current display.
     *
     * Attributes of the returned object :
     *    - x, y: the location of the top-left corner, in pixels
     *    - width, height: the size of the visible area, in pixels
     *    - scale: the scale factor to apply to the SVG document so that is fits the visible area
     */
    function getFrameGeometry(idLayer) {
        var g = exports.layers[idLayer].geometry;
        var result = {};
        result.scale = Math.min(window.innerWidth / g.width, window.innerHeight / g.height);
        result.width = g.width * result.scale;
        result.height = g.height * result.scale;
        result.x = (window.innerWidth - result.width) / 2;
        result.y = (window.innerHeight - result.height) / 2;
        return result;
    }

    /*
     * Returns the geometrical properties of the frame that can be
     * created from a given element.
     *
     * If the element is a rectangle, the properties of the frames are based
     * on the geometrical properties of the rectangle.
     * Otherwise, the properties of the frame are based on the bounding box
     * of the given element.
     *
     * Parameters:
     *    - svgElement: an element from the SVG DOM
     *
     * Returns:
     *    - The default size, translation and rotation for the given element
     */
    exports.getElementGeometry = function (svgElement) {
        // Read the raw bounding box of the given SVG element
        var x, y, w, h;
        if (svgElement.nodeName === &quot;rect&quot;) {
            x = svgElement.x.baseVal.value;
            y = svgElement.y.baseVal.value;
            w = svgElement.width.baseVal.value;
            h = svgElement.height.baseVal.value;
        } else {
            var b = svgElement.getBBox();
            x = b.x;
            y = b.y;
            w = b.width;
            h = b.height;
        }

        // Compute the raw coordinates of the center
        // of the given SVG element
        var c = document.documentElement.createSVGPoint();
        c.x = x + w / 2;
        c.y = y + h / 2;
        
        // Compute the coordinates of the center of the given SVG element
        // after its current transformation
        var matrix = svgElement.getCTM();
        c = c.matrixTransform(matrix);

        // Compute the scaling factor applied to the given SVG element
        var scale = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);
        
        // Return the complete bounding box information of the given
        // SVG element after its current transformation
        return {
            cx: c.x,
            cy: c.y,
            width: w * scale,
            height: h * scale,
            rotate: Math.atan2(matrix.b, matrix.a) * 180 / Math.PI
        };
    };

    /*
     * Returns the geometrical properties of the SVG document
     *
     * Returns:
     *    - The default size, translation and rotation for the document's bounding box
     */
    exports.getDocumentGeometry = function () {
        // This object defines the bounding box of the whole document
        var value = {
            geometry: {
                cx: initialBBox.x + initialBBox.width / 2,
                cy: initialBBox.y + initialBBox.height / 2,
                width: initialBBox.width,
                height: initialBBox.height,
                rotate: 0,
                clip: false
            }
        };
        
        // Copy the document's bounding box to all layers
        var result = { layers: {} };
        for (var idLayer in exports.layers) {
            if (exports.layers.hasOwnProperty(idLayer)) {
                result.layers[idLayer] = value;
            }
        }
        return result;
    };

    /*
     * Apply geometrical transformations to the image according to the current
     * geometrical attributes of this Display.
     *
     * This method is called automatically when the window is resized.
     */
    exports.update = function () {
        for (var idLayer in exports.layers) {
            if (exports.layers.hasOwnProperty(idLayer)) {
                var lg = exports.layers[idLayer].geometry;
                var fg = getFrameGeometry(idLayer);

                // Adjust the location and size of the clipping rectangle and the frame rectangle
                var cr = exports.layers[idLayer].svgClipRect;
                cr.setAttribute(&quot;x&quot;, lg.clip ? fg.x : 0);
                cr.setAttribute(&quot;y&quot;, lg.clip ? fg.y : 0);
                cr.setAttribute(&quot;width&quot;, lg.clip ? fg.width : window.innerWidth);
                cr.setAttribute(&quot;height&quot;, lg.clip ? fg.height : window.innerHeight);
                
                // Compute and apply the geometrical transformation to the layer group
                var translateX = -lg.cx + lg.width / 2  + fg.x / fg.scale;
                var translateY = -lg.cy + lg.height / 2 + fg.y / fg.scale;

                exports.layers[idLayer].svgLayer.setAttribute(&quot;transform&quot;,
                    &quot;scale(&quot; + fg.scale + &quot;)&quot; +
                    &quot;translate(&quot; + translateX + &quot;,&quot; + translateY + &quot;)&quot; +
                    &quot;rotate(&quot; + (-lg.rotate) + ',' + lg.cx + &quot;,&quot; + lg.cy + &quot;)&quot;
                );
            }
        }
    };

    /*
     * Transform the SVG document to show the given frame.
     *
     * Parameters:
     *    - frame: the frame to show
     */
    exports.showFrame = function (frame) {
        for (var idLayer in frame.layers) {
            if (frame.layers.hasOwnProperty(idLayer)) {
                var fg = frame.layers[idLayer].geometry;
                var lg = exports.layers[idLayer].geometry;
                for (var attr in fg) {
                    if (fg.hasOwnProperty(attr)) {
                        lg[attr] = fg[attr];
                    }
                }
            }
        }
        exports.update();
    };

    /*
     * Apply an additional translation to the SVG document based on onscreen coordinates.
     *
     * Parameters:
     *    - deltaX: the horizontal displacement, in pixels
     *    - deltaY: the vertical displacement, in pixels
     */
    exports.drag = function (deltaX, deltaY) {
        for (var idLayer in exports.layers) {
            if (exports.layers.hasOwnProperty(idLayer)) {
                var lg = exports.layers[idLayer].geometry;
                var fg = getFrameGeometry(idLayer);
                var angleRad = lg.rotate * Math.PI / 180;
                lg.cx -= (deltaX * Math.cos(angleRad) - deltaY * Math.sin(angleRad)) / fg.scale;
                lg.cy -= (deltaX * Math.sin(angleRad) + deltaY * Math.cos(angleRad)) / fg.scale;
                lg.clip = false;
            }
        }
        exports.update();
    };

    /*
     * Zooms the display with the given factor.
     *
     * The zoom is centered around (x, y) with respect to the center of the display area.
     */
    exports.zoom = function (factor, x, y) {
        for (var idLayer in exports.layers) {
            if (exports.layers.hasOwnProperty(idLayer)) {
                exports.layers[idLayer].geometry.width /= factor;
                exports.layers[idLayer].geometry.height /= factor;
            }
        }
        
        exports.drag(
            (1 - factor) * (x - window.innerWidth / 2),
            (1 - factor) * (y - window.innerHeight / 2)
        );
    };

    /*
     * Rotate the display with the given angle.
     *
     * The rotation is centered around the center of the display area.
     */
    exports.rotate = function (angle) {
        for (var idLayer in exports.layers) {
            if (exports.layers.hasOwnProperty(idLayer)) {
                exports.layers[idLayer].geometry.rotate += angle;
                exports.layers[idLayer].geometry.rotate %= 360;
            }
        }
        exports.update();
    };
    
    sozi.events.listen(&quot;documentready&quot;, onDocumentReady);
    window.addEventListener(&quot;resize&quot;, resize, false);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 *
 * @depend module.js
 * @depend events.js
 * @depend animation.js
 * @depend display.js
 */

module(this, &quot;sozi.player&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the Sozi display module
    var display = sozi.display;
    
    // The animator object used to animate transitions
    var animator;
    
    // The handle returned by setTimeout() for frame timeout
    var nextFrameTimeout;
    
    // Constants: default animation properties
    // for out-of-sequence transitions
    var DEFAULT_DURATION_MS = 500;
    var DEFAULT_ZOOM_PERCENT = -10;
    var DEFAULT_PROFILE = &quot;linear&quot;;
    
    // The source frame index for the current transition
    var sourceFrameIndex = 0;
    
    // The index of the visible frame
    var currentFrameIndex = 0;
    
    // The state of the presentation.
    // If false, no automatic transition will be fired.
    var playing = false;
    
    // The state of the current frame.
    // If true, an automatic transition will be fired after the current timeout.
    var waiting = false;

    /*
     * Event handler: animation step.
     *
     * This method is called periodically by animator after the animation
     * has been started, and until the animation time is elapsed.
     *
     * Parameter data provides the following information:
     *    - initialState and finalState contain the geometrical properties of the display
     *      at the start and end of the animation.
     *    - profile is a reference to the speed profile function to use.
     *    - zoomWidth and zoomHeight are the parameters of the zooming polynomial if the current
     *      animation has a non-zero zooming effect.
     *
     * Parameter progress is a float number between 0 (start of the animation)
     * and 1 (end of the animation).
     */
    function onAnimationStep(progress, data) {
        for (var idLayer in data) {
            if (data.hasOwnProperty(idLayer)) {
                var lg = display.layers[idLayer].geometry;
                
                var profileProgress = data[idLayer].profile(progress);
                var profileRemaining = 1 - profileProgress;
                
                for (var attr in data[idLayer].initialState) {
                    if (data[idLayer].initialState.hasOwnProperty(attr)) {
                        if (typeof data[idLayer].initialState[attr] === &quot;number&quot; &amp;&amp; typeof data[idLayer].finalState[attr] === &quot;number&quot;) {
                            lg[attr] = data[idLayer].finalState[attr] * profileProgress + data[idLayer].initialState[attr] * profileRemaining;
                        }
                    }
                }

                var ps;
                if (data[idLayer].zoomWidth &amp;&amp; data[idLayer].zoomWidth.k !== 0) {
                    ps = progress - data[idLayer].zoomWidth.ts;
                    lg.width = data[idLayer].zoomWidth.k * ps * ps + data[idLayer].zoomWidth.ss;
                }

                if (data[idLayer].zoomHeight &amp;&amp; data[idLayer].zoomHeight.k !== 0) {
                    ps = progress - data[idLayer].zoomHeight.ts;
                    lg.height = data[idLayer].zoomHeight.k * ps * ps + data[idLayer].zoomHeight.ss;
                }

                lg.clip = data[idLayer].finalState.clip;
            }
        }
        
        display.update();
    }

    /*
     * Starts waiting before moving to the next frame.
     *
     * It the current frame has a timeout set, this method
     * will register a timer to move to the next frame automatically
     * after the specified time.
     *
     * If the current frame is the last, the presentation will
     * move to the first frame.
     */
    function waitTimeout() {
        if (sozi.document.frames[currentFrameIndex].timeoutEnable) {
            waiting = true;
            var index = (currentFrameIndex + 1) % sozi.document.frames.length;
            nextFrameTimeout = window.setTimeout(function () {
                    exports.moveToFrame(index);
                },
                sozi.document.frames[currentFrameIndex].timeoutMs
            );
        }
    }

    /*
     * Event handler: animation done.
     *
     * This method is called by animator when the current animation is finished.
     *
     * If the animation was a transition in the normal course of the presentation,
     * then we call the waitTimeout method to process the timeout property of the current frame.
     */
    function onAnimationDone() {
        sourceFrameIndex = currentFrameIndex;
        if (playing) {
            waitTimeout();
        }
    }

    /*
     * Starts the presentation from the given frame index (0-based).
     *
     * This method sets the &quot;playing&quot; flag, shows the desired frame
     * and calls waitTimeout.
     */
    exports.startFromIndex = function (index) {
        playing = true;
        waiting = false;
        sourceFrameIndex = index;
        currentFrameIndex = index;
        display.showFrame(sozi.document.frames[index]);
        waitTimeout();
    };

    exports.restart = function () {
        exports.startFromIndex(currentFrameIndex);
    };

    /*
     * Stops the presentation.
     *
     * This method clears the &quot;playing&quot;.
     * If the presentation was in &quot;waiting&quot; mode due to a timeout
     * in the current frame, then it stops waiting.
     * The current animation is stopped in its current state.
     */
    exports.stop = function () {
        animator.stop();
        if (waiting) {
            window.clearTimeout(nextFrameTimeout);
            waiting = false;
        }
        playing = false;
        sourceFrameIndex = currentFrameIndex;
    };

    function getZoomData(zoomPercent, s0, s1) {
        var result = {
            ss: ((zoomPercent &lt; 0) ? Math.max(s0, s1) : Math.min(s0, s1)) * (100 - zoomPercent) / 100,
            ts: 0.5,
            k: 0
        };

        if (zoomPercent !== 0) {
            var a = s0 - s1;
            var b = s0 - result.ss;
            var c = s1 - result.ss;

            if (a !== 0) {
                var d = Math.sqrt(b * c);

                var u = (b - d) / a;
                var v = (b + d) / a;

                result.ts = (u &gt; 0 &amp;&amp; u &lt;= 1) ? u : v;
            }

            result.k = b / result.ts / result.ts;
        }

        return result;
    }

    /*
     * Jump to a frame with the given index (0-based).
     *
     * This method does not animate the transition from the current
     * state of the display to the desired frame.
     *
     * The presentation is stopped: if a timeout has been set for the
     * target frame, it will be ignored.
     *
     * The URL hash is set to the given frame index (1-based).
     */
    exports.jumpToFrame = function (index) {
        exports.stop();
        sozi.events.fire(&quot;cleanup&quot;);

        sourceFrameIndex = index;
        currentFrameIndex = index;
        display.showFrame(sozi.document.frames[index]);

        sozi.events.fire(&quot;framechange&quot;, index);
    };

    /*
     * Returns an associative array where keys are layer names
     * and values are objects in the form { initialState: finalState: profile: zoomWidth: zoomHeight:}
     */
    function getAnimationData(initialState, finalState, zoomPercent, profile) {
        var data = {};
        
        for (var idLayer in initialState.layers) {
            if (initialState.layers.hasOwnProperty(idLayer)) {
                data[idLayer] = {
                    initialState: {},
                    finalState: {}
                };
                
                data[idLayer].profile = profile || finalState.layers[idLayer].transitionProfile;

                // Copy all properties of given final state
                for (var g in initialState.layers[idLayer].geometry) {
                    if (initialState.layers[idLayer].geometry.hasOwnProperty(g)) {
                        data[idLayer].initialState[g] = initialState.layers[idLayer].geometry[g];
                        // If the current layer is referenced in final state, copy the final properties
                        // else, copy initial state to final state for the current layer.
                        if (finalState.layers.hasOwnProperty(idLayer)) {
                            data[idLayer].finalState[g] = finalState.layers[idLayer].geometry[g];
                        }
                        else {
                            data[idLayer].finalState[g] = initialState.layers[idLayer].geometry[g];
                        }
                    }
                }

                // Keep the smallest angle difference between initial state and final state
                data[idLayer].initialState.rotate = (data[idLayer].initialState.rotate - 180) % 360 + 180;
                data[idLayer].finalState.rotate = (data[idLayer].finalState.rotate - 180) % 360 + 180;
        
                if (data[idLayer].finalState.rotate - data[idLayer].initialState.rotate &gt; 180) {
                    data[idLayer].finalState.rotate -= 360;
                }
                else if (data[idLayer].finalState.rotate - data[idLayer].initialState.rotate &lt; -180) {
                    data[idLayer].initialState.rotate -= 360;
                }

                var zp = zoomPercent || finalState.layers[idLayer].transitionZoomPercent;
                
                if (zp &amp;&amp; finalState.layers.hasOwnProperty(idLayer)) {
                    data[idLayer].zoomWidth = getZoomData(zp,
                        initialState.layers[idLayer].geometry.width,
                        finalState.layers[idLayer].geometry.width);
                    data[idLayer].zoomHeight = getZoomData(zp,
                        initialState.layers[idLayer].geometry.height,
                        finalState.layers[idLayer].geometry.height);
                }
            }
        }
        
        return data;
    }
    
    exports.previewFrame = function (index) {
        currentFrameIndex = index;
        animator.start(DEFAULT_DURATION_MS,
            getAnimationData(display, sozi.document.frames[index],
                DEFAULT_ZOOM_PERCENT, sozi.animation.profiles[DEFAULT_PROFILE]));
        sozi.events.fire(&quot;framechange&quot;, index);
    };

    /*
     * Moves to a frame with the given index (0-based).
     *
     * This method animates the transition from the current
     * state of the display to the desired frame.
     *
     * If the given frame index corresponds to the next frame in the list,
     * the transition properties of the next frame are used.
     * Otherwise, default transition properties are used.
     *
     * The URL hash is set to the given frame index (1-based).
     */
    exports.moveToFrame = function (index) {
        if (waiting) {
            window.clearTimeout(nextFrameTimeout);
            waiting = false;
        }

        var durationMs, zoomPercent, profile;
        if (index === (currentFrameIndex + 1) % sozi.document.frames.length) {
            durationMs = sozi.document.frames[index].transitionDurationMs;
            zoomPercent = undefined; // Set for each layer
            profile = undefined; // Set for each layer
        }
        else {
            durationMs = DEFAULT_DURATION_MS;
            zoomPercent = DEFAULT_ZOOM_PERCENT;
            profile = sozi.animation.profiles[DEFAULT_PROFILE];
        }

        sozi.events.fire(&quot;cleanup&quot;);

        playing = true;
        currentFrameIndex = index;

        animator.start(durationMs, getAnimationData(display, sozi.document.frames[index], zoomPercent, profile));

        sozi.events.fire(&quot;framechange&quot;, index);
    };

    /*
     * Moves to the first frame of the presentation.
     */
    exports.moveToFirst = function () {
        exports.moveToFrame(0);
    };

    /*
     * Jumps to the previous frame
     */
    exports.jumpToPrevious = function () {
        var index = currentFrameIndex;
        if (!animator.started || sourceFrameIndex &lt;= currentFrameIndex) {
            index -= 1;
        }
        if (index &gt;= 0) {
            exports.jumpToFrame(index);
        }
    };

    /*
     * Moves to the previous frame.
     */
    exports.moveToPrevious = function () {
        for (var index = currentFrameIndex - 1; index &gt;= 0; index -= 1) {
            var frame = sozi.document.frames[index];
            if (!frame.timeoutEnable || frame.timeoutMs !== 0) {
                exports.moveToFrame(index);
                break;
            }
        }
    };

    /*
     * Jumps to the next frame
     */
    exports.jumpToNext = function () {
        var index = currentFrameIndex;
        if (!animator.started || sourceFrameIndex &gt;= currentFrameIndex) {
            index += 1;
        }
        if (index &lt; sozi.document.frames.length) {
            exports.jumpToFrame(index);
        }
    };

    /*
     * Moves to the next frame.
     */
    exports.moveToNext = function () {
        if (currentFrameIndex &lt; sozi.document.frames.length - 1 || sozi.document.frames[currentFrameIndex].timeoutEnable) {
            exports.moveToFrame((currentFrameIndex + 1) % sozi.document.frames.length);
        }
    };

    /*
     * Moves to the last frame of the presentation.
     */
    exports.moveToLast = function () {
        exports.moveToFrame(sozi.document.frames.length - 1);
    };

    /*
     * Restores the current frame.
     *
     * This method restores the display to fit the current frame,
     * e.g. after the display has been zoomed or dragged.
     */
    exports.moveToCurrent = function () {
        exports.moveToFrame(currentFrameIndex);
    };

    /*
     * Shows all the document in the browser window.
     */
    exports.showAll = function () {
        exports.stop();
        sozi.events.fire(&quot;cleanup&quot;);
        animator.start(DEFAULT_DURATION_MS,
            getAnimationData(display, display.getDocumentGeometry(),
                DEFAULT_ZOOM_PERCENT, sozi.animation.profiles[DEFAULT_PROFILE]
            )
        );
    };

    /*
     * Event handler: display ready.
     */
    function onDisplayReady() {
        exports.startFromIndex(sozi.location.getFrameIndex());

        // Hack to fix the blank screen bug in Chrome/Chromium
        // See https://github.com/senshu/Sozi/issues/109
        window.setTimeout(display.update, 1);
    }

    animator = new sozi.animation.Animator(onAnimationStep, onAnimationDone);

    sozi.events.listen(&quot;displayready&quot;, onDisplayReady);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 *
 * @depend module.js
 * @depend player.js
 * @depend display.js
 */

module(this, &quot;sozi.actions&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // Module aliases
    var player = sozi.player;
    var display = sozi.display;
    
    // The global document object
    var document = window.document;
    
    // Constants: mouse button numbers
    var DRAG_BUTTON = 0;    // Left button
    var TOC_BUTTON = 1;     // Middle button
    
    // Constants: increments for zooming and rotating
    var SCALE_FACTOR = 1.05;
    var ROTATE_STEP = 5;
    
    // State variables for the drag action
    var dragButtonIsDown = false;
    var dragging = false;
    var dragClientX = 0;
    var dragClientY = 0;
    
    /*
     * Zooms the display in the given direction.
     *
     * Only the sign of direction is used:
     *    - zoom in when direction &gt; 0
     *    - zoom out when direction &lt;= 0
     *
     * The scaling is centered around point (x, y).
     */
    function zoom(direction, x, y) {
        player.stop();
        display.zoom(direction &gt; 0 ? SCALE_FACTOR : 1 / SCALE_FACTOR, x, y);
    }
    
    /*
     * Rotate the display in the given direction.
     *
     * Only the sign of direction is used:
     *    - rotate anticlockwise when direction &gt; 0
     *    - rotate clockwise when direction &lt;= 0
     */
    function rotate(direction) {
        player.stop();
        display.rotate(direction &gt; 0 ? ROTATE_STEP : -ROTATE_STEP);
    }
    
    /*
     * Show/hide the frame list.
     *
     * The presentation stops when the frame list is showed,
     * and restarts when the frame list is hidden.
     */
    function toggleFrameList() {
        if (sozi.framelist.isVisible()) {
            sozi.framelist.hide();
            player.restart();
        } else {
            player.stop();
            sozi.framelist.show();
        }
    }

    /*
     * Event handler: mouse down.
     *
     * When the left button is pressed, we register the current coordinates
     * in case the mouse will be dragged. Flag &quot;dragButtonIsDown&quot; is set until
     * the button is released (onMouseUp). This flag is used by onMouseMove.
     *
     * When the middle button is pressed, the table of contents is shown or hidden.
     */
    function onMouseDown(evt) {
        if (evt.button === DRAG_BUTTON) {
            dragButtonIsDown = true;
            dragging = false;
            dragClientX = evt.clientX;
            dragClientY = evt.clientY;
        } else if (evt.button === TOC_BUTTON) {
            toggleFrameList();
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /*
     * Event handler: mouse move.
     *
     * If the left mouse button is down, then the mouse move is a drag action.
     * This method computes the displacement since the button was pressed or
     * since the last move, and updates the reference coordinates for the next move.
     */
    function onMouseMove(evt) {
        if (dragButtonIsDown) {
            player.stop();
            dragging = true;
            sozi.events.fire(&quot;cleanup&quot;);
            display.drag(evt.clientX - dragClientX, evt.clientY - dragClientY);
            dragClientX = evt.clientX;
            dragClientY = evt.clientY;
        }
        evt.stopPropagation();
    }

    /*
     * Event handler: mouse up.
     *
     * Releasing the left button resets the &quot;dragButtonIsDown&quot; flag.
     */
    function onMouseUp(evt) {
        if (evt.button === DRAG_BUTTON) {
            dragButtonIsDown = false;
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /*
     * Event handler: context menu (i.e. right click).
     *
     * Right click goes one frame back.
     *
     * There is no &quot;click&quot; event for the right mouse button and the menu
     * can't be disabled in &quot;onMouseDown&quot;.
     */
    function onContextMenu(evt) {
        player.moveToPrevious();
        evt.stopPropagation();
        evt.preventDefault();
    }

    /*
     * Event handler: mouse click.
     *
     * Left-click moves the presentation to the next frame.
     *
     * No &quot;click&quot; event is generated for the middle button in Firefox.
     * See &quot;onMouseDown&quot; for middle click handling.
     *
     * Dragging the mouse produces a &quot;click&quot; event when the button is released.
     * If flag &quot;dragging&quot; was set by &quot;onMouseMove&quot;, then the click event is the result
     * of a drag action.
     */
    function onClick(evt) {
        if (!dragging &amp;&amp; evt.button !== TOC_BUTTON) {
            player.moveToNext();
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /*
     * Event handler: mouse wheel.
     *
     * Rolling the mouse wheel stops the presentation and zooms the current display.
     *
     * FIXME shift key does not work in Opera
     */
    function onWheel(evt) {
        if (!evt) {
            evt = window.event;
        }

        var delta = 0;
        if (evt.wheelDelta) { // IE and Opera
            delta = evt.wheelDelta;
        }
        else if (evt.detail) { // Mozilla
            delta = -evt.detail;
        }
        
        if (delta !== 0) {
            if (evt.shiftKey) {
                rotate(delta);
            }
            else {
                zoom(delta, evt.clientX, evt.clientY);
            }
        }
        
        evt.stopPropagation();
        evt.preventDefault();
    }

    /*
     * Event handler: key press.
     *
     * Keyboard handling is split into two methods: onKeyPress and onKeyDown
     * in order to get the same behavior across browsers.
     *
     * This method handles character keys &quot;+&quot;, &quot;-&quot;, &quot;=&quot;, &quot;F&quot; and &quot;T&quot;.
     */
    function onKeyPress(evt) {
        // Keys with modifiers are ignored
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
            return;
        }

        switch (evt.charCode || evt.keyCode) {
        case 43: // +
            zoom(1, window.innerWidth / 2, window.innerHeight / 2);
            break;
        case 45: // -
            zoom(-1, window.innerWidth / 2, window.innerHeight / 2);
            break;
        case 61: // =
            player.moveToCurrent();
            break;
        case 70: // F
        case 102: // f
            player.showAll();
            break;
        case 84: // T
        case 116: // t
            toggleFrameList();
            break;
        case 82: // R
            rotate(-1);
            break;
        case 114: // r
            rotate(1);
            break;
        }

        evt.stopPropagation();
        evt.preventDefault();
    }

    /*
     * Event handler: key down.
     *
     * Keyboard handling is split into two methods: onKeyPress and onKeyDown
     * in order to get the same behavior across browsers.
     *
     * This method handles navigation keys (arrows, page up/down, home, end)
     * and the space and enter keys.
     */
    function onKeyDown(evt) {
        // Keys with modifiers are ignored
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
            return;
        }

        switch (evt.keyCode) {
        case 36: // Home
            player.moveToFirst();
            break;
        case 35: // End
            player.moveToLast();
            break;
        case 38: // Arrow up
            player.jumpToPrevious();
            break;
        case 33: // Page up
        case 37: // Arrow left
            player.moveToPrevious();
            break;
        case 40: // Arrow down
            player.jumpToNext();
            break;
        case 34: // Page down
        case 39: // Arrow right
        case 13: // Enter
        case 32: // Space
            player.moveToNext();
            break;
        }
        
        evt.stopPropagation();
        
        // In Chrome/Chromium, preventDefault() inhibits the &quot;keypress&quot; event
    }

    function onLoad() {
        var svgRoot = document.documentElement;

        // TODO also use shift-click as an alternative for middle-click
        svgRoot.addEventListener(&quot;click&quot;, onClick, false);
        svgRoot.addEventListener(&quot;mousedown&quot;, onMouseDown, false);
        svgRoot.addEventListener(&quot;mouseup&quot;, onMouseUp, false);
        svgRoot.addEventListener(&quot;mousemove&quot;, onMouseMove, false);
        svgRoot.addEventListener(&quot;keypress&quot;, onKeyPress, false);
        svgRoot.addEventListener(&quot;keydown&quot;, onKeyDown, false);
        svgRoot.addEventListener(&quot;contextmenu&quot;, onContextMenu, false);
        svgRoot.addEventListener(&quot;DOMMouseScroll&quot;, onWheel, false); // Mozilla
        window.onmousewheel = onWheel;
    }

    window.addEventListener(&quot;load&quot;, onLoad, false);
});

/*
* Sozi - A presentation tool using the SVG standard
*
* Copyright (C) 2010-2012 Guillaume Savaton
*
* This program is dual licensed under the terms of the MIT license
* or the GNU General Public License (GPL) version 3.
* A copy of both licenses is provided in the doc/ folder of the
* official release of Sozi.
*
* See http://sozi.baierouge.fr/wiki/en:license for details.
*
* @depend module.js
* @depend events.js
*/

module(this, &quot;sozi.document&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
    var document = window.document;
    
    // Constant: the Sozi namespace
    var SOZI_NS = &quot;http://sozi.baierouge.fr&quot;;
    
    // Constant: the default frame properties, if missing in the SVG document
    var DEFAULTS = {
        &quot;title&quot;: &quot;Untitled&quot;,
        &quot;sequence&quot;: &quot;0&quot;,
        &quot;hide&quot;: &quot;true&quot;,
        &quot;clip&quot;: &quot;true&quot;,
        &quot;timeout-enable&quot;: &quot;false&quot;,
        &quot;timeout-ms&quot;: &quot;5000&quot;,
        &quot;transition-duration-ms&quot;: &quot;1000&quot;,
        &quot;transition-zoom-percent&quot;: &quot;0&quot;,
        &quot;transition-profile&quot;: &quot;linear&quot;
    };

    // The definitions of all valid frames in the current document
    exports.frames = [];
    
    // The list of layer ids managed by Sozi
    exports.idLayerList = [];
    
    /*
    * Returns the value of an attribute of a given Sozi SVG element.
    *
    * If the attribute is not set, then a default value is returned.
    * See DEFAULTS.
    */
    function readAttribute(soziElement, attr) {
        var value = soziElement.getAttributeNS(SOZI_NS, attr);
        return value === &quot;&quot; ? DEFAULTS[attr] : value;
    }

    function readLayerProperties(frame, idLayer, soziElement) {
        var layer = frame.layers[idLayer] = frame.layers[idLayer] || {
            idLayer: idLayer, // FIXME never used
            geometry: {
                clip: DEFAULTS.clip
            }
        };
        
        if (typeof layer.hide === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;hide&quot;)) {
            layer.hide = readAttribute(soziElement, &quot;hide&quot;) === &quot;true&quot;;
        }

        if (typeof layer.transitionZoomPercent === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-zoom-percent&quot;)) {
            layer.transitionZoomPercent = parseInt(readAttribute(soziElement, &quot;transition-zoom-percent&quot;), 10);
        }

        if (typeof layer.transitionProfile === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-profile&quot;)) {
            layer.transitionProfile = sozi.animation.profiles[readAttribute(soziElement, &quot;transition-profile&quot;) || &quot;linear&quot;];
        }
        
        var actualClip = layer.geometry.clip;
        if (soziElement.hasAttributeNS(SOZI_NS, &quot;refid&quot;)) {
            // The previous value of the &quot;clip&quot; attribute will be preserved
            // when setting the new geometry object.
            var svgElement = document.getElementById(soziElement.getAttributeNS(SOZI_NS, &quot;refid&quot;));
            if (svgElement) {
                if (layer.hide) {
                    svgElement.style.visibility = &quot;hidden&quot;;
                }
                layer.geometry = sozi.display.getElementGeometry(svgElement);
                layer.geometry.clip = actualClip;
            }
        }
            
        if (soziElement.hasAttributeNS(SOZI_NS, &quot;clip&quot;)) {
            layer.geometry.clip = readAttribute(soziElement, &quot;clip&quot;) === &quot;true&quot;;
        }
    }
    
    /*
    * Builds the list of frames from the current document.
    *
    * This method collects all elements with tag &quot;sozi:frame&quot; and
    * retrieves their geometrical and animation attributes.
    * SVG elements that should be hidden during the presentation are hidden.
    *
    * The resulting list is available in frames, sorted by frame indices.
    */
    function readFrames() {
        // Collect all group ids of &lt;layer&gt; elements
        var soziLayerList = Array.prototype.slice.call(document.getElementsByTagNameNS(SOZI_NS, &quot;layer&quot;));
        soziLayerList.forEach(function (soziLayer) {
            var idLayer = soziLayer.getAttributeNS(SOZI_NS, &quot;group&quot;);
            if (idLayer &amp;&amp; exports.idLayerList.indexOf(idLayer) === -1 &amp;&amp; document.getElementById(idLayer)) {
                exports.idLayerList.push(idLayer);
            }
        });

        // If at least one &lt;frame&gt; element has a refid attribute,
        // reorganize the document, grouping objects that do not belong
        // to a group referenced in &lt;layer&gt; elements
        var soziFrameList = Array.prototype.slice.call(document.getElementsByTagNameNS(SOZI_NS, &quot;frame&quot;));
        if (soziFrameList.some(function (soziFrame) {
                return soziFrame.hasAttributeNS(SOZI_NS, &quot;refid&quot;);
            }))
        {
            var svgRoot = document.documentElement;
            var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

            // Create the first wrapper group
            var svgWrapper = document.createElementNS(SVG_NS, &quot;g&quot;);

            // For each child of the root SVG element
            var svgElementList = Array.prototype.slice.call(svgRoot.childNodes);
            svgElementList.forEach(function (svgElement, index) {
                if (!svgElement.getAttribute) {
                    // Remove text elements
                    svgRoot.removeChild(svgElement);
                }
                else if (exports.idLayerList.indexOf(svgElement.getAttribute(&quot;id&quot;)) === -1) {
                    // If the current element is not a referenced layer,
                    // move it to the current wrapper element
                    // FIXME move graphic elements only
                    svgRoot.removeChild(svgElement);
                    svgWrapper.appendChild(svgElement);
                }
                else if (svgWrapper.firstChild) {
                    // If the current element is a referenced layer,
                    // and if there were other non-referenced elements before it,
                    // insert the wrapper group before the current element
                    svgWrapper.setAttribute(&quot;id&quot;, &quot;sozi-wrapper-&quot; + index);
                    exports.idLayerList.push(&quot;sozi-wrapper-&quot; + index);
                    svgRoot.insertBefore(svgWrapper, svgElement);
                    
                    // Prepare a new wrapper element
                    svgWrapper = document.createElementNS(SVG_NS, &quot;g&quot;);
                }
            });

            // Append last wrapper if needed
            if (svgWrapper.firstChild) {
                svgWrapper.setAttribute(&quot;id&quot;, &quot;sozi-wrapper-&quot; + svgElementList.length);
                exports.idLayerList.push(&quot;sozi-wrapper-&quot; + svgElementList.length);
                svgRoot.appendChild(svgWrapper);
            }
        }

        // Analyze &lt;frame&gt; elements
        soziFrameList.forEach(function (soziFrame, indexFrame) {
            var newFrame = {
                id: soziFrame.getAttribute(&quot;id&quot;),
                title: readAttribute(soziFrame, &quot;title&quot;),
                sequence: parseInt(readAttribute(soziFrame, &quot;sequence&quot;), 10),
                timeoutEnable: readAttribute(soziFrame, &quot;timeout-enable&quot;) === &quot;true&quot;,
                timeoutMs: parseInt(readAttribute(soziFrame, &quot;timeout-ms&quot;), 10),
                transitionDurationMs: parseInt(readAttribute(soziFrame, &quot;transition-duration-ms&quot;), 10),
                layers: {}
            };

            // Get the default properties for all layers, either from
            // the current &lt;frame&gt; element or from the corresponding
            // layer in the previous frame.
            // Those properties can later be overriden by &lt;layer&gt; elements
            exports.idLayerList.forEach(function (idLayer) {
                if (indexFrame === 0 || idLayer.search(&quot;sozi-wrapper-[0-9]+&quot;) !== -1) {
                    // In the first frame, or in wrapper layers,
                    // read layer attributes from the &lt;frame&gt; element
                    readLayerProperties(newFrame, idLayer, soziFrame);
                }
                else {
                    // After the first frame, in referenced layers,
                    // copy attributes from the corresponding layer in the previous frame
                    var currentLayer = newFrame.layers[idLayer] = {};
                    var previousLayer = exports.frames[exports.frames.length - 1].layers[idLayer];
                    for (var attr in previousLayer) {
                        if (previousLayer.hasOwnProperty(attr)) {
                            currentLayer[attr] = previousLayer[attr];
                        }
                    }
                }
            });

            // Collect and analyze &lt;layer&gt; elements in the current &lt;frame&gt; element
            soziLayerList = Array.prototype.slice.call(soziFrame.getElementsByTagNameNS(SOZI_NS, &quot;layer&quot;));
            soziLayerList.forEach(function (soziLayer) {
                var idLayer = soziLayer.getAttributeNS(SOZI_NS, &quot;group&quot;);
                if (idLayer &amp;&amp; exports.idLayerList.indexOf(idLayer) !== -1) {
                    readLayerProperties(newFrame, idLayer, soziLayer);
                }
            });
            
            // If the &lt;frame&gt; element has at least one valid layer,
            // add it to the frame list
            for (var idLayer in newFrame.layers) {
                if (newFrame.layers.hasOwnProperty(idLayer)) {
                    exports.frames.push(newFrame);
                    break;
                }
            }
        });
        
        // Sort frames by sequence index
        exports.frames.sort(
            function (a, b) {
                return a.sequence - b.sequence;
            }
        );
    }

    /*
    * Event handler: document load.
    *
    * This function reads the frames from the document.
    */
    function onLoad() {
        document.documentElement.removeAttribute(&quot;viewBox&quot;);
        readFrames();
        sozi.events.fire(&quot;documentready&quot;);
    }

    window.addEventListener(&quot;load&quot;, onLoad, false);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 *
 * @depend module.js
 * @depend events.js
 */

module(this, &quot;sozi.location&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var changedFromWithin = false;
    
    /*
     * Returns the frame index given in the URL hash.
     *
     * In the URL, the frame index starts a 1.
     * This method converts it into a 0-based index.
     *
     * If the URL hash is not a positive integer, then 0 is returned.
     * It the URL hash is an integer greater than the last frame index, then
     * the last frame index is returned.
     */
    exports.getFrameIndex = function () {
        var index = window.location.hash ?
            parseInt(window.location.hash.slice(1), 10) - 1 : 0;
        if (isNaN(index) || index &lt; 0) {
            return 0;
        } else if (index &gt;= sozi.document.frames.length) {
            return sozi.document.frames.length - 1;
        } else {
            return index;
        }
    };

    /*
     * Event handler: hash change.
     *
     * This function is called when the URL hash is changed.
     * If the hash was changed manually in the address bar, and if it corresponds to
     * a valid frame number, then the presentation moves to that frame.
     *
     * The hashchange event can be triggered externally, by the user modifying the URL,
     * or internally, by the script modifying window.location.hash.
     */
    function onHashChange() {
        var index = exports.getFrameIndex();
        if (!changedFromWithin) {
            sozi.player.moveToFrame(index);
        }
        changedFromWithin = false;
    }
    
    /*
     * Event handler: frame change.
     *
     * This function is called when the presentation has reached a
     * new frame.
     * The URL hash is changed based on the provided frame index.
     */
    function onFrameChange(index) {
        changedFromWithin = true;
        window.location.hash = &quot;#&quot; + (index + 1);
    }

	/*
	 * Event handler: document load.
	 *
	 * This function registers the &quot;framechange&quot; handler.
	 */
    function onLoad() {
        sozi.events.listen(&quot;framechange&quot;, onFrameChange);
    }
    
    window.addEventListener(&quot;hashchange&quot;, onHashChange, false);
    window.addEventListener(&quot;load&quot;, onLoad, false);
});

/*
    @depend framenumber.js
    @depend framelist.js
    @depend actions.js
    @depend player.js
    @depend display.js
    @depend document.js
    @depend location.js
*/

</script>
  <style
     ns1:version="12.04-16224053"
     id="sozi-style">/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 * 
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

#sozi-toc text {
   fill: #eff;
   font-family: Verdana, sans-serif;
   font-size: 12pt;
}

#sozi-toc text:hover {
   fill: #0cf;
   cursor: pointer;
}

#sozi-toc text.sozi-toc-current {
   fill: #fa4;
}

#sozi-toc-background {
   stroke: #222;
   stroke-opacity: 0.1;
   stroke-width: 10;
   fill: #222;
   fill-opacity: 0.9;
}

.sozi-toc-arrow {
   fill: #eff;
   fill-opacity: 0.75;
   stroke: none;
}

.sozi-toc-arrow:hover {
   fill: #0cf;
}

#sozi-framenumber circle {
   stroke: #222;
   stroke-opacity: 0.1;
   stroke-width: 4;
   fill: #222;
   fill-opacity: 0.9;
}

#sozi-framenumber text {
   fill: #eff;
   font-family: Verdana, sans-serif;
   font-size: 12pt;
}

</style>
  <script
     ns1:version="12.04-16224053"
     id="sozi-extras-addvideo-script">/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2012 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 * 
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

this.addEventListener(&quot;load&quot;, function () {
	var	svgNs = &quot;http://www.w3.org/2000/svg&quot;,
	    soziNs = &quot;http://sozi.baierouge.fr&quot;,
		xhtmlNs = &quot;http://www.w3.org/1999/xhtml&quot;,
		window = this,
		document = window.document,
		mediaSources = [],
		mediaList, i, j, k, rect, foreignObject,
		html, htmlMedia, htmlSource;
	
    function clickHandler(evt) {
        evt.stopPropagation();
    }
    
    function registerFrameChangeHandler(htmlMedia, startFrame, stopFrame) {
        sozi.events.listen(&quot;framechange&quot;, function(index) {
            var frameId = sozi.document.frames[index].id;
		    if (frameId === startFrame) {
		        htmlMedia.play();
			}
            else if (frameId === stopFrame) {
                htmlMedia.pause();
            }
		});
    }
    
	mediaSources.push(document.getElementsByTagNameNS(soziNs, &quot;video&quot;));
	mediaSources.push(document.getElementsByTagNameNS(soziNs, &quot;audio&quot;));

	mediaList = [];
	for (k = 0; k &lt; mediaSources.length; k += 1) {
	    for (i = 0; i &lt; mediaSources[k].length; i += 1) {
		    rect = mediaSources[k][i].parentNode;
	
		    // Create HTML media source element
		    htmlSource = document.createElementNS(xhtmlNs, &quot;source&quot;);
		    htmlSource.setAttribute(&quot;type&quot;, mediaSources[k][i].getAttributeNS(soziNs, &quot;type&quot;));
		    htmlSource.setAttribute(&quot;src&quot;, mediaSources[k][i].getAttributeNS(soziNs, &quot;src&quot;));

		    for (j = 0; j &lt; mediaList.length; j += 1) {
			    if (mediaList[j].rect === rect) {
				    break;
			    }
		    }
	
		    if (j === mediaList.length) {
		        rect.setAttribute(&quot;visibility&quot;, &quot;hidden&quot;);
		        
			    // Create HTML media element
			    htmlMedia = document.createElementNS(xhtmlNs, mediaSources[k][i].tagName);
			    // htmlMedia.setAttribute(&quot;poster&quot;, &quot;__dummy__.png&quot;);
			    htmlMedia.setAttribute(&quot;controls&quot;, &quot;controls&quot;);
			    if (mediaSources[k][i].tagName === &quot;video&quot;) {
			        htmlMedia.setAttribute(&quot;width&quot;, rect.getAttribute(&quot;width&quot;));
			        htmlMedia.setAttribute(&quot;height&quot;, rect.getAttribute(&quot;height&quot;));
			    }
		        htmlMedia.addEventListener(&quot;click&quot;, clickHandler, false);
		        htmlMedia.addEventListener(&quot;contextmenu&quot;, clickHandler, false);
		        
			    // Create HTML root element
			    html = document.createElementNS(xhtmlNs, &quot;html&quot;);
			    html.appendChild(htmlMedia);
		
			    // Create SVG foreign object
			    foreignObject = document.createElementNS(svgNs, &quot;foreignObject&quot;);
			    foreignObject.setAttribute(&quot;x&quot;, rect.getAttribute(&quot;x&quot;));
			    foreignObject.setAttribute(&quot;y&quot;, rect.getAttribute(&quot;y&quot;));
			    foreignObject.setAttribute(&quot;width&quot;, rect.getAttribute(&quot;width&quot;));
			    foreignObject.setAttribute(&quot;height&quot;, rect.getAttribute(&quot;height&quot;));
			    foreignObject.appendChild(html);
				
			    rect.parentNode.insertBefore(foreignObject, rect.nextSibling);
			
			    if (mediaSources[k][i].hasAttributeNS(soziNs, &quot;start-frame&quot;)) {
			        registerFrameChangeHandler(htmlMedia,
			            mediaSources[k][i].getAttributeNS(soziNs, &quot;start-frame&quot;),
			            mediaSources[k][i].getAttributeNS(soziNs, &quot;stop-frame&quot;)
			         );
			    }
			
			    mediaList.push({
				    rect: mediaSources[k][i].parentNode,
				    htmlMedia: htmlMedia
			    });
		    }
	    
    		// Append HTML source element to current HTML media element
    		mediaList[j].htmlMedia.appendChild(htmlSource);
	    }
	}				
}, false);

</script>
</svg>
